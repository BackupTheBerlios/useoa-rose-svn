"TestCases/AliasTests/comma.c", line 5: warning: variable "z" was declared but
          never referenced
      int x=1, y=2, z=3;
                    ^


PROCEDURE = { < ProcHandle("main"), SymHandle("main") > }
    MEMREFEXPRS = { StmtHandle("extern "C" struct _IO_FILE_plus _IO_2_1_stdin_;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("extern "C" struct _IO_FILE_plus _IO_2_1_stdout_;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("extern "C" struct _IO_FILE_plus _IO_2_1_stderr_;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int main(){int x = 1;int y = 2;int z = 3;int *p;int *q;int *r = &y;p =((q = &x) , r);printf("*p = %d\n", *p);printf("*q = %d\n", *q);return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{int x = 1;int y = 2;int z = 3;int *p;int *q;int *r = &y;p =((q = &x) , r);printf("*p = %d\n", *p);printf("*q = %d\n", *q);return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int x = 1;") =>
        [
            MemRefHandle("x") => 
                NamedRef( DEF, SymHandle("x"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("int y = 2;") =>
        [
            MemRefHandle("y") => 
                NamedRef( DEF, SymHandle("y"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("int z = 3;") =>
        [
            MemRefHandle("z") => 
                NamedRef( DEF, SymHandle("z"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("int *p;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int *q;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int *r = &y;") =>
        [
            MemRefHandle("r") => 
                NamedRef( DEF, SymHandle("r"), F, full)
            MemRefHandle("&y") => 
                NamedRef( USE, SymHandle("y"), T, full)
        ] }
    PTRASSIGNPAIRS = { StmtHandle("int *r = &y;") =>
        [
            < NamedRef( DEF, SymHandle("r"), F, full)
            , NamedRef( USE, SymHandle("y"), T, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("p =((q = &x) , r);") =>
        [
            MemRefHandle("p") => 
                NamedRef( DEF, SymHandle("p"), F, full)
            MemRefHandle("q") => 
                NamedRef( DEF, SymHandle("q"), F, full)
            MemRefHandle("&x") => 
                NamedRef( USE, SymHandle("x"), T, full)
            MemRefHandle("(q = &x)") => 
                NamedRef( USE, SymHandle("q"), F, full)
            MemRefHandle("p =((q = &x) , r)") => 
                NamedRef( USE, SymHandle("p"), F, full)
            MemRefHandle("((q = &x) , r)") => 
                NamedRef( USE, SymHandle("r"), F, full)
        ] }
    PTRASSIGNPAIRS = { StmtHandle("p =((q = &x) , r);") =>
        [
            < NamedRef( DEF, SymHandle("p"), F, full)
            , NamedRef( USE, SymHandle("r"), F, full) >
            < NamedRef( DEF, SymHandle("q"), F, full)
            , NamedRef( USE, SymHandle("x"), T, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("printf("*p = %d\n", *p);") =>
        [
            MemRefHandle("p") => 
                NamedRef( USE, SymHandle("p"), F, full)
            MemRefHandle("printf") => 
                NamedRef( USE, SymHandle("printf"), F, full)
            MemRefHandle(""*p = %d\n"") => 
                UnnamedRef( USE, StmtHandle(""*p = %d\n""), T, part)
            MemRefHandle("*p") => 
                Deref( USE, NamedRef( USE, SymHandle("p"), F, full), 1, F, full)
        ] }
    CALLSITES = { StmtHandle("printf("*p = %d\n", *p);") =>
        [
            CallHandle("printf("*p = %d\n", *p)") => 
                NamedRef( USE, SymHandle("printf"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("printf("*q = %d\n", *q);") =>
        [
            MemRefHandle("q") => 
                NamedRef( USE, SymHandle("q"), F, full)
            MemRefHandle("printf") => 
                NamedRef( USE, SymHandle("printf"), F, full)
            MemRefHandle(""*q = %d\n"") => 
                UnnamedRef( USE, StmtHandle(""*q = %d\n""), T, part)
            MemRefHandle("*q") => 
                Deref( USE, NamedRef( USE, SymHandle("q"), F, full), 1, F, full)
        ] }
    CALLSITES = { StmtHandle("printf("*q = %d\n", *q);") =>
        [
            CallHandle("printf("*q = %d\n", *q)") => 
                NamedRef( USE, SymHandle("printf"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("return 0;") =>
        [
        ] }
    LOCATION = { < SymHandle("x"), local > }
    LOCATION = { < SymHandle("y"), local > }
    LOCATION = { < SymHandle("z"), local > }
    LOCATION = { < SymHandle("p"), local > }
    LOCATION = { < SymHandle("q"), local > }
    LOCATION = { < SymHandle("r"), local > }
    LOCATION = { < SymHandle("printf"), not local > }
    LOCATION = { < SymHandle("main"), not local > }
