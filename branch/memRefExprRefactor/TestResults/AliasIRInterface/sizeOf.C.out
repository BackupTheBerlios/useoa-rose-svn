"TestCases/AliasTests/sizeOf.C", line 18: warning: expression has no effect
      sizeof(int);
      ^

"TestCases/AliasTests/sizeOf.C", line 19: warning: expression has no effect
      sizeof x;
      ^

"TestCases/AliasTests/sizeOf.C", line 20: warning: expression has no effect
      sizeof c;
      ^

"TestCases/AliasTests/sizeOf.C", line 21: warning: expression has no effect
      sizeof b;
      ^

Found a NULL_FILE name in node->get_file_info() for node = SgReturnStmt 
Found a NULL_FILE name in node->get_file_info() for node = SgReturnStmt 
Found a NULL_FILE name in node->get_file_info() for node = SgReturnStmt 

PROCEDURE = { < ProcHandle("main"), SymHandle("main") > }
    MEMREFEXPRS = { StmtHandle("int main(){int x;char c;class blah b;(sizeof(int ));(sizeof(x));(sizeof(c));(sizeof(b));}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{int x;char c;class blah b;(sizeof(int ));(sizeof(x));(sizeof(c));(sizeof(b));}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int x;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("char c;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("class blah b;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("(sizeof(int ));") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("(sizeof(x));") =>
        [
            MemRefHandle("x") => 
                NamedRef( USE, SymHandle("x"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("(sizeof(c));") =>
        [
            MemRefHandle("c") => 
                NamedRef( USE, SymHandle("c"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("(sizeof(b));") =>
        [
            MemRefHandle("b") => 
                NamedRef( USE, SymHandle("b"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("return 0;") =>
        [
        ] }
    LOCATION = { < SymHandle("x"), local > }
    LOCATION = { < SymHandle("c"), local > }
    LOCATION = { < SymHandle("b"), local > }
    LOCATION = { < SymHandle("main"), not local > }
