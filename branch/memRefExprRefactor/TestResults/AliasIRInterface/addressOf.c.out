"TestCases/AliasTests/addressOf.c", line 5: warning: variable "b" was declared
          but never referenced
      int a, b, c;
             ^

"TestCases/AliasTests/addressOf.c", line 5: warning: variable "c" was declared
          but never referenced
      int a, b, c;
                ^


PROCEDURE = { < ProcHandle("main"), SymHandle("main") > }
    MEMREFEXPRS = { StmtHandle("int main(){int a;int b;int c;int *p;int **q;int v[3];struct temp {int hello;}mystruct;p = &a;q = &p;p = *q;p =(v + 2);p = p;p = &mystruct.hello;return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{int a;int b;int c;int *p;int **q;int v[3];struct temp {int hello;}mystruct;p = &a;q = &p;p = *q;p =(v + 2);p = p;p = &mystruct.hello;return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int a;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int b;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int c;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int *p;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int **q;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int v[3];") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("struct temp {int hello;}mystruct;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("p = &a;") =>
        [
            MemRefHandle("p") => 
                NamedRef( DEF, SymHandle("p"), F, full)
            MemRefHandle("&a") => 
                NamedRef( USE, SymHandle("a"), T, full)
            MemRefHandle("p = &a") => 
                NamedRef( USE, SymHandle("p"), F, full)
        ] }
    PTRASSIGNPAIRS = { StmtHandle("p = &a;") =>
        [
            < NamedRef( DEF, SymHandle("p"), F, full)
            , NamedRef( USE, SymHandle("a"), T, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("q = &p;") =>
        [
            MemRefHandle("q") => 
                NamedRef( DEF, SymHandle("q"), F, full)
            MemRefHandle("&p") => 
                NamedRef( USE, SymHandle("p"), T, full)
            MemRefHandle("q = &p") => 
                NamedRef( USE, SymHandle("q"), F, full)
        ] }
    PTRASSIGNPAIRS = { StmtHandle("q = &p;") =>
        [
            < NamedRef( DEF, SymHandle("q"), F, full)
            , NamedRef( USE, SymHandle("p"), T, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("p = *q;") =>
        [
            MemRefHandle("p") => 
                NamedRef( DEF, SymHandle("p"), F, full)
            MemRefHandle("q") => 
                NamedRef( USE, SymHandle("q"), F, full)
            MemRefHandle("p = *q") => 
                NamedRef( USE, SymHandle("p"), F, full)
            MemRefHandle("*q") => 
                Deref( USE, NamedRef( USE, SymHandle("q"), F, full), 1, F, full)
        ] }
    PTRASSIGNPAIRS = { StmtHandle("p = *q;") =>
        [
            < NamedRef( DEF, SymHandle("p"), F, full)
            , Deref( USE, NamedRef( USE, SymHandle("q"), F, full), 1, F, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("p =(v + 2);") =>
        [
            MemRefHandle("p") => 
                NamedRef( DEF, SymHandle("p"), F, full)
            MemRefHandle("v") => 
                NamedRef( USE, SymHandle("v"), T, part)
            MemRefHandle("p =(v + 2)") => 
                NamedRef( USE, SymHandle("p"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("p = p;") =>
        [
            MemRefHandle("p") => 
                NamedRef( DEF, SymHandle("p"), F, full)
            MemRefHandle("p") => 
                NamedRef( USE, SymHandle("p"), F, full)
            MemRefHandle("p = p") => 
                NamedRef( USE, SymHandle("p"), F, full)
        ] }
    PTRASSIGNPAIRS = { StmtHandle("p = p;") =>
        [
            < NamedRef( DEF, SymHandle("p"), F, full)
            , NamedRef( USE, SymHandle("p"), F, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("p = &mystruct.hello;") =>
        [
            MemRefHandle("p") => 
                NamedRef( DEF, SymHandle("p"), F, full)
            MemRefHandle("&mystruct.hello") => 
                FieldAccess( USE, NamedRef( USE, SymHandle("mystruct"), F, full), hello, T, full)
            MemRefHandle("p = &mystruct.hello") => 
                NamedRef( USE, SymHandle("p"), F, full)
        ] }
    PTRASSIGNPAIRS = { StmtHandle("p = &mystruct.hello;") =>
        [
            < NamedRef( DEF, SymHandle("p"), F, full)
            , FieldAccess( USE, NamedRef( USE, SymHandle("mystruct"), F, full), hello, T, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("return 0;") =>
        [
        ] }
    LOCATION = { < SymHandle("a"), local > }
    LOCATION = { < SymHandle("p"), local > }
    LOCATION = { < SymHandle("q"), local > }
    LOCATION = { < SymHandle("v"), local > }
    LOCATION = { < SymHandle("mystruct"), local > }
    LOCATION = { < SymHandle("main"), not local > }
