
PROCEDURE = { < ProcHandle("Foo::Foo"), SymHandle("method:Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_") > }
    FORMALS = {
        [
            < 0, SymHandle("this::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_") >
        ] }
    MEMREFEXPRS = { StmtHandle("") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("public: inline Foo(){}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{}") =>
        [
        ] }
    LOCATION = { < SymHandle("this::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"), local > }
    LOCATION = { < SymHandle("method:Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"), not local > }

PROCEDURE = { < ProcHandle("Foo::~Foo"), SymHandle("method:Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_") > }
    FORMALS = {
        [
            < 0, SymHandle("this::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_") >
        ] }
    MEMREFEXPRS = { StmtHandle("") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("public: inline ~Foo(){}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{}") =>
        [
        ] }
    LOCATION = { < SymHandle("this::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"), local > }
    LOCATION = { < SymHandle("method:Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"), not local > }

PROCEDURE = { < ProcHandle("main"), SymHandle("main") > }
    MEMREFEXPRS = { StmtHandle("int main(){class Foo *f = ::new Foo ;delete f;return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{class Foo *f = ::new Foo ;delete f;return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("class Foo *f = ::new Foo ;") =>
        [
            MemRefHandle("f") => 
                NamedRef( DEF, SymHandle("f"), F, full)
            MemRefHandle("implicit actual this:") => 
                UnnamedRef( USE, StmtHandle("class Foo *f = ::new Foo ;"), T, part)
            MemRefHandle("Foo") => 
                NamedRef( USE, SymHandle("method:Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"), F, full)
            MemRefHandle("::new Foo") => 
                UnnamedRef( USE, StmtHandle("class Foo *f = ::new Foo ;"), T, part)
        ] }
    PTRASSIGNPAIRS = { StmtHandle("class Foo *f = ::new Foo ;") =>
        [
            < NamedRef( DEF, SymHandle("f"), F, full)
            , UnnamedRef( USE, StmtHandle("class Foo *f = ::new Foo ;"), T, part) >
        ] }
    CALLSITES = { StmtHandle("class Foo *f = ::new Foo ;") =>
        [
            CallHandle("::new Foo") => 
                NamedRef( USE, SymHandle("method:Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"), F, full)
        ] }
    PARAMBINDPTRASSIGNPAIRS = { CallHandle("::new Foo") =>
        [
            < 0, UnnamedRef( USE, StmtHandle("class Foo *f = ::new Foo ;"), T, part) >
        ] }
    MEMREFEXPRS = { StmtHandle("delete f;") =>
        [
            MemRefHandle("f") => 
                NamedRef( USE, SymHandle("f"), F, full)
            MemRefHandle("delete f") => 
                NamedRef( USE, SymHandle("method:Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"), F, full)
        ] }
    CALLSITES = { StmtHandle("delete f;") =>
        [
            CallHandle("delete f") => 
                NamedRef( USE, SymHandle("method:Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"), F, full)
        ] }
    PARAMBINDPTRASSIGNPAIRS = { CallHandle("delete f") =>
        [
            < 0, NamedRef( USE, SymHandle("f"), F, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("return 0;") =>
        [
        ] }
    LOCATION = { < SymHandle("f"), local > }
    LOCATION = { < SymHandle("main"), not local > }
    LOCATION = { < SymHandle("method:Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"), not local > }
    LOCATION = { < SymHandle("method:Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"), not local > }
