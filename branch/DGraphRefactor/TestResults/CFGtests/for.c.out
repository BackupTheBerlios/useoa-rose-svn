Found a NULL_FILE name in node->get_file_info() for node = SgReturnStmt 
**************************************
Inside CFG performAnalysis
CFG::PerformAnalysis before EntryNode
In CFG addNode
in CFG::addNode: node id: 1
In DGraphImplement addNode
No Null ptr in add Node: node dump: []

(before) Adding into DGraph :: Node not found in the set

(After) Adding into DGraph:: Node found in the set
End of DGraphImplement
CFG addNode ends
CFG::PerformAnalysis after EntryNode

CFG::performAnalysis before start node
In CFG addNode
in CFG::addNode: node id: 2
In DGraphImplement addNode
No Null ptr in add Node: node dump: []
	1
NodeImplement::operator==
	left id = 2
	right id= 2
	returning == as 1
NodeImplement::operator==
	left id = 4
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 4
	right id= 1
	returning < as 0

(before) Adding into DGraph:: Node found in the set
NodeImplement::operator==
	left id = 4
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 4
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 2
	returning == as 1
NodeImplement::operator==
	left id = 2
	right id= 2
	returning == as 1
NodeImplement::operator==
	left id = 4
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 4
	right id= 1
	returning < as 0

(After) Adding into DGraph:: Node found in the set
End of DGraphImplement
CFG addNode ends
CFG::performAnalysis after start node 
DGraphImplement::addEdge(e)
	e = NodeImplement::operator==
	left id = 2
	right id= 2
	returning == as 1
NodeImplement::operator==
	left id = 4
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 4
	right id= 1
	returning < as 0
int i;
int i;
double x;
double x;
double y;
double y;
double f;
double f;
f = __builtin_huge_val();
f = __builtin_huge_val();
for(i = 0;i < 20;i++) {x =((3 * i));y =((2) * x);f +=(x + y);}
DGraphImplement::addEdge(e)
	e = NodeImplement::operator==
	left id = 2
	right id= 2
	returning == as 1
NodeImplement::operator==
	left id = 4
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 4
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1
In DGraphImplement addNode
No Null ptr in add Node: node dump: []
	1
NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1

(before) Adding into DGraph :: Node not found in the set
NodeImplement::operator==
	left id = 6
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1

(After) Adding into DGraph:: Node found in the set
End of DGraphImplement
	adding e->sink, which is ...
EdgeImplement::operator==
	left id = 2
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 2
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 2
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 2
	returning == as 0
in CFG::addNode: node id: 4
In DGraphImplement addNode
No Null ptr in add Node: node dump: []
	1
	3
NodeImplement::operator==
	left id = 2
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 4
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 4
	returning < as 0
NodeImplement::operator==
	left id = 8
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 8
	right id= 3
	returning < as 0

(before) Adding into DGraph:: Node found in the set
NodeImplement::operator==
	left id = 8
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 8
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 8
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 8
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 6
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 4
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 4
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 4
	returning < as 0
NodeImplement::operator==
	left id = 8
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 8
	right id= 3
	returning < as 0

(After) Adding into DGraph:: Node found in the set
End of DGraphImplement

 CFG Node
x =((3 * i));
x =((3 * i));
y =((2) * x);
y =((2) * x);
f +=(x + y);
f +=(x + y);


DGraphImplement::addEdge(e)
	e = NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1
NodeImplement::operator==
	left id = 2
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 4
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 4
	returning < as 0
NodeImplement::operator==
	left id = 8
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 8
	right id= 3
	returning < as 0
EdgeImplement::operator==
	left id = 3
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 3
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 3
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 3
	returning == as 0
DGraphImplement::addEdge(e)
	e = NodeImplement::operator==
	left id = 2
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 4
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 4
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 4
	returning < as 0
NodeImplement::operator==
	left id = 8
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 8
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 5
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 5
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 5
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 5
	returning < as 0
NodeImplement::operator==
	left id = 10
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 10
	right id= 3
	returning < as 0
EdgeImplement::operator==
	left id = 4
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 4
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 4
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 4
	returning == as 0
DGraphImplement::addEdge(e)
	e = NodeImplement::operator==
	left id = 2
	right id= 5
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 5
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 5
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 5
	returning < as 0
NodeImplement::operator==
	left id = 10
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 10
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1
EdgeImplement::operator==
	left id = 5
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 5
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 5
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 5
	returning == as 0
return 0;
in CFG::addNode: node id: 6
In DGraphImplement addNode
No Null ptr in add Node: node dump: []
	1
	3
NodeImplement::operator==
	left id = 2
	right id= 6
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 6
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 6
	returning == as 1
NodeImplement::operator==
	left id = 12
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 12
	right id= 3
	returning < as 0

(before) Adding into DGraph:: Node found in the set
NodeImplement::operator==
	left id = 12
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 12
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 12
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 12
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 6
	right id= 6
	returning == as 1
NodeImplement::operator==
	left id = 2
	right id= 6
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 6
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 6
	returning == as 1
NodeImplement::operator==
	left id = 12
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 12
	right id= 3
	returning < as 0

(After) Adding into DGraph:: Node found in the set
End of DGraphImplement

 CFG Node
DGraphImplement::addEdge(e)
	e = NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1
NodeImplement::operator==
	left id = 2
	right id= 6
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 6
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 6
	returning == as 1
NodeImplement::operator==
	left id = 12
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 12
	right id= 3
	returning < as 0
EdgeImplement::operator==
	left id = 6
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 6
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 6
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 6
	returning == as 0

in CFG::addNode: node id: 7
In DGraphImplement addNode
No Null ptr in add Node: node dump: []
	1
	3
NodeImplement::operator==
	left id = 2
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 7
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 7
	returning < as 1

(before) Adding into DGraph :: Node not found in the set
NodeImplement::operator==
	left id = 14
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 14
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 6
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 7
	returning < as 1
NodeImplement::operator==
	left id = 14
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 6
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 7
	returning < as 1

(After) Adding into DGraph:: Node found in the set
End of DGraphImplement

 CFG Node

CFG::performAnalysis before ExitNode
In CFG addNode
in CFG::addNode: node id: 8
In DGraphImplement addNode
No Null ptr in add Node: node dump: []
	1
	3
	7
NodeImplement::operator==
	left id = 6
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 8
	returning < as 1
NodeImplement::operator==
	left id = 14
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 8
	returning < as 0
NodeImplement::operator==
	left id = 16
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 16
	right id= 7
	returning < as 0

(before) Adding into DGraph:: Node found in the set
NodeImplement::operator==
	left id = 16
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 16
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 16
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 16
	right id= 7
	returning < as 0
NodeImplement::operator==
	left id = 14
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 8
	returning < as 0
NodeImplement::operator==
	left id = 6
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 8
	returning < as 1
NodeImplement::operator==
	left id = 14
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 8
	returning < as 0
NodeImplement::operator==
	left id = 16
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 16
	right id= 7
	returning < as 0

(After) Adding into DGraph:: Node found in the set
End of DGraphImplement
CFG addNode ends
CFG::performAnalysis after ExitNode
DGraphImplement::addEdge(e)
	e = NodeImplement::operator==
	left id = 6
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 7
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 8
	returning < as 1
NodeImplement::operator==
	left id = 14
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 8
	returning < as 0
NodeImplement::operator==
	left id = 16
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 16
	right id= 7
	returning < as 0
EdgeImplement::operator==
	left id = 7
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 7
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 7
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 7
	returning == as 0
DGraphImplement::addEdge(e)
	e = NodeImplement::operator==
	left id = 6
	right id= 6
	returning == as 1
NodeImplement::operator==
	left id = 2
	right id= 6
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 6
	returning < as 1
NodeImplement::operator==
	left id = 12
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 12
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 6
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 8
	returning < as 1
NodeImplement::operator==
	left id = 14
	right id= 8
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 8
	returning < as 0
NodeImplement::operator==
	left id = 16
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 16
	right id= 7
	returning < as 0
EdgeImplement::operator==
	left id = 8
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 8
	right id= 1
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 8
	returning == as 0
EdgeImplement::operator==
	left id = 1
	right id= 8
	returning == as 0
NodeImplement::operator==
	left id = 6
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 14
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 14
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 6
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 7
	returning < as 1
NodeImplement::operator==
	left id = 14
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 14
	right id= 3
	returning < as 0
NodeImplement::operator==
	left id = 6
	right id= 1
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 1
	returning < as 0
NodeImplement::operator==
	left id = 2
	right id= 3
	returning == as 0
NodeImplement::operator<
	left id = 2
	right id= 3
	returning < as 1
NodeImplement::operator==
	left id = 6
	right id= 7
	returning == as 0
NodeImplement::operator<
	left id = 6
	right id= 7
	returning < as 1
End of CFG performAnalysis
Inside DGRaphImplement output 

digraph DGraphImplement {
    node [shape=rectangle];
    1 [ label="====== CFG node 2 ======\n" ];
    3 [ label="====== CFG node 6 ======\nfor(i = 0;i < 20;i++) {x =((3 * i));y =((2) * x);f +=(x + y);}\n" ];
    7 [ label="====== CFG node 14 ======\n\n" ];Printing Edges in the DGraphImplement output
DGraphImplement Printing EdgesIterator
DGraphImplement Printing EdgesIterator

    1 -> 2 [ label="{ 1 FALLTHROUGH_EDGE 0 }" ];}
