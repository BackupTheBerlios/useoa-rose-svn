
EquivSets(
		mMemRefToProc: MemRefHandle	 => ProcHandle
MemRefHandle(y)	 =>ProcHandle(foo)
MemRefHandle(g)	 =>ProcHandle(foo)
MemRefHandle(p)	 =>ProcHandle(foo)
MemRefHandle(a)	 =>ProcHandle(foo)
MemRefHandle(p)	 =>ProcHandle(foo)
MemRefHandle(((int *)(malloc((4 *(y))))))	 =>ProcHandle(foo)
MemRefHandle(a)	 =>ProcHandle(foo)
MemRefHandle(*a)	 =>ProcHandle(foo)
MemRefHandle(a)	 =>ProcHandle(foo)
MemRefHandle(p)	 =>ProcHandle(foo)
MemRefHandle(a)	 =>ProcHandle(foo)
MemRefHandle(*a)	 =>ProcHandle(foo)


		mMemRefToSets: MemRefHandle	 => int
MemRefHandle(y)	 =>[ 1 ] 
MemRefHandle(g)	 =>[ 2 ] 
MemRefHandle(p)	 =>[ 3 ] 
MemRefHandle(a)	 =>[ 4 ] 
MemRefHandle(p)	 =>[ 3 ] 
MemRefHandle(a)	 =>[ 4 ] 
MemRefHandle(*a)	 =>[ 8 ] 
MemRefHandle(a)	 =>[ 4 ] 
MemRefHandle(p)	 =>[ 3 ] 
MemRefHandle(a)	 =>[ 4 ] 
MemRefHandle(*a)	 =>[ 8 ] 


		mProcNSetToLocs: ProcHandle	 => std::map<int,OA_ptr<Location> >
ProcHandle(foo)	 =>
			SetToLocs: int	 => std::map<int,OA_ptr<Location> >
1	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(y)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
2	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(g)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
3	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(p)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
4	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(a)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
8	 =>[ 
			UnnamedLoc(
				mStmtHandle: StmtHandle(((int *)(malloc((4 *(y))))))
				mLocal: 0			)    
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 1
					mMemRefType: DEF
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(a)					)
					mNumDeref: 1				)			) ] 



)
