
EquivSets(
		mMemRefToProc: MemRefHandle	 => ProcHandle
MemRefHandle(s.s1)	 =>ProcHandle(main)
MemRefHandle(&x)	 =>ProcHandle(main)
MemRefHandle(s.s2)	 =>ProcHandle(main)
MemRefHandle(&y)	 =>ProcHandle(main)
MemRefHandle(p)	 =>ProcHandle(main)
MemRefHandle((s.s1))	 =>ProcHandle(main)
MemRefHandle((s.s1))	 =>ProcHandle(main)
MemRefHandle(*(s.s1))	 =>ProcHandle(main)
MemRefHandle((s.s2))	 =>ProcHandle(main)
MemRefHandle(*(s.s2))	 =>ProcHandle(main)


		mMemRefToSets: MemRefHandle	 => int
MemRefHandle(s.s1)	 =>[ 1 ] 
MemRefHandle(s.s2)	 =>[ 1 ] 
MemRefHandle(p)	 =>[ 4 ] 
MemRefHandle((s.s1))	 =>[ 1 ] 
MemRefHandle((s.s1))	 =>[ 1 ] 
MemRefHandle(*(s.s1))	 =>[ 8 ] 
MemRefHandle((s.s2))	 =>[ 1 ] 
MemRefHandle(*(s.s2))	 =>[ 8 ] 


		mProcNSetToLocs: ProcHandle	 => std::map<int,OA_ptr<Location> >
ProcHandle(main)	 =>
			SetToLocs: int	 => std::map<int,OA_ptr<Location> >
1	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(s)
					mLocal: 0
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
4	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(p)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
8	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(x)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			)    
			NamedLoc(
				mSymHandle: SymHandle(y)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			)    
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 1
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 0
						mMemRefType: DEF
						mSymHandle: SymHandle(s)					)
					mNumDeref: 1				)			)    
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 0
						mMemRefType: USE
						mSymHandle: SymHandle(s)					)
					mNumDeref: 1				)			) ] 



)
