
EquivSets(		MemRefHandle	 => ProcHandle
MemRefHandle(i)	 =>ProcHandle(vector::vecAdd)
MemRefHandle(i)	 =>ProcHandle(vector::vecAdd)
MemRefHandle(i)	 =>ProcHandle(vector::vecAdd)
MemRefHandle((this))	 =>ProcHandle(vector::vecAdd)
MemRefHandle(i)	 =>ProcHandle(vector::vecAdd)
MemRefHandle(((this) -> val)[i])	 =>ProcHandle(vector::vecAdd)
MemRefHandle(v)	 =>ProcHandle(vector::vecAdd)
MemRefHandle(i)	 =>ProcHandle(vector::vecAdd)
MemRefHandle((v[i]))	 =>ProcHandle(vector::vecAdd)
MemRefHandle(drsq)	 =>ProcHandle(body::subdivp)
MemRefHandle((Parms.epsSq))	 =>ProcHandle(body::subdivp)
MemRefHandle(i)	 =>ProcHandle(body::subdivp)
MemRefHandle(i)	 =>ProcHandle(body::subdivp)
MemRefHandle(i)	 =>ProcHandle(body::subdivp)
MemRefHandle(d)	 =>ProcHandle(body::subdivp)
MemRefHandle(i)	 =>ProcHandle(body::subdivp)
MemRefHandle(((n -> pos.val)[i]))	 =>ProcHandle(body::subdivp)
MemRefHandle(i)	 =>ProcHandle(body::subdivp)
MemRefHandle((((this) -> pos.val)[i]))	 =>ProcHandle(body::subdivp)
MemRefHandle(drsq)	 =>ProcHandle(body::subdivp)
MemRefHandle(d)	 =>ProcHandle(body::subdivp)
MemRefHandle(d)	 =>ProcHandle(body::subdivp)
MemRefHandle((Parms.tolSq))	 =>ProcHandle(body::subdivp)
MemRefHandle(drsq)	 =>ProcHandle(body::subdivp)
MemRefHandle(dsq)	 =>ProcHandle(body::subdivp)
MemRefHandle(drsq)	 =>ProcHandle(body::computeInter)
MemRefHandle((Parms.eps))	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle(d)	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle(((n -> pos.val)[i]))	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle((((this) -> pos.val)[i]))	 =>ProcHandle(body::computeInter)
MemRefHandle(drsq)	 =>ProcHandle(body::computeInter)
MemRefHandle(d)	 =>ProcHandle(body::computeInter)
MemRefHandle(d)	 =>ProcHandle(body::computeInter)
MemRefHandle(inc)	 =>ProcHandle(body::computeInter)
MemRefHandle(n)	 =>ProcHandle(body::computeInter)
MemRefHandle((n -> mass))	 =>ProcHandle(body::computeInter)
MemRefHandle(drsq)	 =>ProcHandle(body::computeInter)
MemRefHandle(r)	 =>ProcHandle(body::computeInter)
MemRefHandle(inc)	 =>ProcHandle(body::computeInter)
MemRefHandle(drsq)	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle(res)	 =>ProcHandle(body::computeInter)
MemRefHandle(i)	 =>ProcHandle(body::computeInter)
MemRefHandle(res[i])	 =>ProcHandle(body::computeInter)
MemRefHandle(r)	 =>ProcHandle(body::computeInter)
MemRefHandle(inc)	 =>ProcHandle(body::computeInter)
MemRefHandle(d)	 =>ProcHandle(body::gravsub)
MemRefHandle((this))	 =>ProcHandle(body::gravsub)
MemRefHandle((this) -> computeInter)	 =>ProcHandle(body::gravsub)
MemRefHandle(n)	 =>ProcHandle(body::gravsub)
MemRefHandle(tmpv)	 =>ProcHandle(body::gravsub)
MemRefHandle((this))	 =>ProcHandle(body::gravsub)
MemRefHandle((this) -> phi)	 =>ProcHandle(body::gravsub)
MemRefHandle(d)	 =>ProcHandle(body::gravsub)
MemRefHandle((this))	 =>ProcHandle(body::gravsub)
MemRefHandle((this) -> acc)	 =>ProcHandle(body::gravsub)
MemRefHandle((this) -> acc.vecAdd)	 =>ProcHandle(body::gravsub)
MemRefHandle(tmpv)	 =>ProcHandle(body::gravsub)
MemRefHandle(i)	 =>ProcHandle(body::openCell)
MemRefHandle(i)	 =>ProcHandle(body::openCell)
MemRefHandle(i)	 =>ProcHandle(body::openCell)
MemRefHandle(n)	 =>ProcHandle(body::openCell)
MemRefHandle(c)	 =>ProcHandle(body::openCell)
MemRefHandle(i)	 =>ProcHandle(body::openCell)
MemRefHandle(((c -> subp)[i]))	 =>ProcHandle(body::openCell)
MemRefHandle(n)	 =>ProcHandle(body::openCell)
MemRefHandle((this))	 =>ProcHandle(body::openCell)
MemRefHandle((this) -> walksub)	 =>ProcHandle(body::openCell)
MemRefHandle(n)	 =>ProcHandle(body::openCell)
MemRefHandle(dsq)	 =>ProcHandle(body::openCell)
MemRefHandle(i)	 =>ProcHandle(body::openLeaf)
MemRefHandle(i)	 =>ProcHandle(body::openLeaf)
MemRefHandle(l)	 =>ProcHandle(body::openLeaf)
MemRefHandle((l -> numbodies))	 =>ProcHandle(body::openLeaf)
MemRefHandle(i)	 =>ProcHandle(body::openLeaf)
MemRefHandle(b)	 =>ProcHandle(body::openLeaf)
MemRefHandle(l)	 =>ProcHandle(body::openLeaf)
MemRefHandle(i)	 =>ProcHandle(body::openLeaf)
MemRefHandle(((l -> bodyp)[i]))	 =>ProcHandle(body::openLeaf)
MemRefHandle(b)	 =>ProcHandle(body::openLeaf)
MemRefHandle((this))	 =>ProcHandle(body::openLeaf)
MemRefHandle((this))	 =>ProcHandle(body::openLeaf)
MemRefHandle((this) -> gravsub)	 =>ProcHandle(body::openLeaf)
MemRefHandle(b)	 =>ProcHandle(body::openLeaf)
MemRefHandle((this))	 =>ProcHandle(body::walksub)
MemRefHandle((this) -> subdivp)	 =>ProcHandle(body::walksub)
MemRefHandle(n)	 =>ProcHandle(body::walksub)
MemRefHandle(dsq)	 =>ProcHandle(body::walksub)
MemRefHandle(c)	 =>ProcHandle(body::walksub)
MemRefHandle(n)	 =>ProcHandle(body::walksub)
MemRefHandle(c)	 =>ProcHandle(body::walksub)
MemRefHandle((this))	 =>ProcHandle(body::walksub)
MemRefHandle((this) -> openCell)	 =>ProcHandle(body::walksub)
MemRefHandle(c)	 =>ProcHandle(body::walksub)
MemRefHandle(dsq)	 =>ProcHandle(body::walksub)
MemRefHandle(l)	 =>ProcHandle(body::walksub)
MemRefHandle(n)	 =>ProcHandle(body::walksub)
MemRefHandle(l)	 =>ProcHandle(body::walksub)
MemRefHandle((this))	 =>ProcHandle(body::walksub)
MemRefHandle((this) -> openLeaf)	 =>ProcHandle(body::walksub)
MemRefHandle(l)	 =>ProcHandle(body::walksub)
MemRefHandle((this))	 =>ProcHandle(body::walksub)
MemRefHandle((this) -> gravsub)	 =>ProcHandle(body::walksub)
MemRefHandle(n)	 =>ProcHandle(body::walksub)
MemRefHandle(i)	 =>ProcHandle(nbody::computeForces)
MemRefHandle(i)	 =>ProcHandle(nbody::computeForces)
MemRefHandle((this))	 =>ProcHandle(nbody::computeForces)
MemRefHandle(((this) -> numbodies))	 =>ProcHandle(nbody::computeForces)
MemRefHandle(i)	 =>ProcHandle(nbody::computeForces)
MemRefHandle(b)	 =>ProcHandle(nbody::computeForces)
MemRefHandle((this))	 =>ProcHandle(nbody::computeForces)
MemRefHandle(((this) -> bodies))	 =>ProcHandle(nbody::computeForces)
MemRefHandle(i)	 =>ProcHandle(nbody::computeForces)
MemRefHandle((((this) -> bodies)[i]))	 =>ProcHandle(nbody::computeForces)
MemRefHandle(b)	 =>ProcHandle(nbody::computeForces)
MemRefHandle(b -> walksub)	 =>ProcHandle(nbody::computeForces)
MemRefHandle((this))	 =>ProcHandle(nbody::computeForces)
MemRefHandle(((this) -> BH_root))	 =>ProcHandle(nbody::computeForces)
MemRefHandle((this))	 =>ProcHandle(nbody::computeForces)
MemRefHandle(((this) -> size))	 =>ProcHandle(nbody::computeForces)
MemRefHandle((this))	 =>ProcHandle(nbody::computeForces)
MemRefHandle(((this) -> size))	 =>ProcHandle(nbody::computeForces)

		MemRefHandle	 => int
MemRefHandle(i)	 =>[ 1 ] 
MemRefHandle(i)	 =>[ 1 ] 
MemRefHandle(i)	 =>[ 1 ] 
MemRefHandle((this))	 =>[ 2 ] 
MemRefHandle(i)	 =>[ 1 ] 
MemRefHandle(((this) -> val)[i])	 =>[ 3 ] 
MemRefHandle(v)	 =>[ 4 ] 
MemRefHandle(i)	 =>[ 1 ] 
MemRefHandle((v[i]))	 =>[ 5 ] 
MemRefHandle(drsq)	 =>[ 7 ] 
MemRefHandle((Parms.epsSq))	 =>[ 8 ] 
MemRefHandle(i)	 =>[ 9 ] 
MemRefHandle(i)	 =>[ 9 ] 
MemRefHandle(i)	 =>[ 9 ] 
MemRefHandle(d)	 =>[ 10 ] 
MemRefHandle(i)	 =>[ 9 ] 
MemRefHandle(((n -> pos.val)[i]))	 =>[ 11 ] 
MemRefHandle(i)	 =>[ 9 ] 
MemRefHandle((((this) -> pos.val)[i]))	 =>[ 12 ] 
MemRefHandle(drsq)	 =>[ 7 ] 
MemRefHandle(d)	 =>[ 10 ] 
MemRefHandle(d)	 =>[ 10 ] 
MemRefHandle((Parms.tolSq))	 =>[ 8 ] 
MemRefHandle(drsq)	 =>[ 7 ] 
MemRefHandle(dsq)	 =>[ 13 ] 
MemRefHandle(drsq)	 =>[ 16 ] 
MemRefHandle((Parms.eps))	 =>[ 8 ] 
MemRefHandle(i)	 =>[ 17 ] 
MemRefHandle(i)	 =>[ 17 ] 
MemRefHandle(i)	 =>[ 17 ] 
MemRefHandle(d)	 =>[ 18 ] 
MemRefHandle(i)	 =>[ 17 ] 
MemRefHandle(((n -> pos.val)[i]))	 =>[ 19 ] 
MemRefHandle(i)	 =>[ 17 ] 
MemRefHandle((((this) -> pos.val)[i]))	 =>[ 20 ] 
MemRefHandle(drsq)	 =>[ 16 ] 
MemRefHandle(d)	 =>[ 18 ] 
MemRefHandle(d)	 =>[ 18 ] 
MemRefHandle(inc)	 =>[ 21 ] 
MemRefHandle(n)	 =>[ 22 ] 
MemRefHandle((n -> mass))	 =>[ 23 ] 
MemRefHandle(drsq)	 =>[ 16 ] 
MemRefHandle(r)	 =>[ 24 ] 
MemRefHandle(inc)	 =>[ 21 ] 
MemRefHandle(drsq)	 =>[ 16 ] 
MemRefHandle(i)	 =>[ 25 ] 
MemRefHandle(i)	 =>[ 25 ] 
MemRefHandle(i)	 =>[ 25 ] 
MemRefHandle(res)	 =>[ 26 ] 
MemRefHandle(i)	 =>[ 25 ] 
MemRefHandle(res[i])	 =>[ 27 ] 
MemRefHandle(r)	 =>[ 24 ] 
MemRefHandle(inc)	 =>[ 21 ] 
MemRefHandle(d)	 =>[ 29 ] 
MemRefHandle((this))	 =>[ 30 ] 
MemRefHandle((this) -> computeInter)	 =>[ 31 ] 
MemRefHandle(n)	 =>[ 32 ] 
MemRefHandle(tmpv)	 =>[ 33 ] 
MemRefHandle((this))	 =>[ 30 ] 
MemRefHandle((this) -> phi)	 =>[ 34 ] 
MemRefHandle(d)	 =>[ 29 ] 
MemRefHandle((this))	 =>[ 30 ] 
MemRefHandle((this) -> acc.vecAdd)	 =>[ 36 ] 
MemRefHandle(tmpv)	 =>[ 33 ] 
MemRefHandle(i)	 =>[ 37 ] 
MemRefHandle(i)	 =>[ 37 ] 
MemRefHandle(i)	 =>[ 37 ] 
MemRefHandle(n)	 =>[ 38 ] 
MemRefHandle(c)	 =>[ 39 ] 
MemRefHandle(i)	 =>[ 37 ] 
MemRefHandle(((c -> subp)[i]))	 =>[ 40 ] 
MemRefHandle(n)	 =>[ 38 ] 
MemRefHandle((this))	 =>[ 41 ] 
MemRefHandle((this) -> walksub)	 =>[ 42 ] 
MemRefHandle(n)	 =>[ 38 ] 
MemRefHandle(dsq)	 =>[ 43 ] 
MemRefHandle(i)	 =>[ 44 ] 
MemRefHandle(i)	 =>[ 44 ] 
MemRefHandle(l)	 =>[ 45 ] 
MemRefHandle((l -> numbodies))	 =>[ 46 ] 
MemRefHandle(i)	 =>[ 44 ] 
MemRefHandle(b)	 =>[ 47 ] 
MemRefHandle(l)	 =>[ 45 ] 
MemRefHandle(i)	 =>[ 44 ] 
MemRefHandle(((l -> bodyp)[i]))	 =>[ 48 ] 
MemRefHandle(b)	 =>[ 47 ] 
MemRefHandle((this))	 =>[ 49 ] 
MemRefHandle((this))	 =>[ 49 ] 
MemRefHandle((this) -> gravsub)	 =>[ 50 ] 
MemRefHandle(b)	 =>[ 47 ] 
MemRefHandle((this))	 =>[ 51 ] 
MemRefHandle((this) -> subdivp)	 =>[ 52 ] 
MemRefHandle(n)	 =>[ 53 ] 
MemRefHandle(dsq)	 =>[ 54 ] 
MemRefHandle(c)	 =>[ 55 ] 
MemRefHandle(n)	 =>[ 53 ] 
MemRefHandle(c)	 =>[ 55 ] 
MemRefHandle((this))	 =>[ 51 ] 
MemRefHandle((this) -> openCell)	 =>[ 56 ] 
MemRefHandle(c)	 =>[ 55 ] 
MemRefHandle(dsq)	 =>[ 54 ] 
MemRefHandle(l)	 =>[ 57 ] 
MemRefHandle(n)	 =>[ 53 ] 
MemRefHandle(l)	 =>[ 57 ] 
MemRefHandle((this))	 =>[ 51 ] 
MemRefHandle((this) -> openLeaf)	 =>[ 58 ] 
MemRefHandle(l)	 =>[ 57 ] 
MemRefHandle((this))	 =>[ 51 ] 
MemRefHandle((this) -> gravsub)	 =>[ 50 ] 
MemRefHandle(n)	 =>[ 53 ] 
MemRefHandle(i)	 =>[ 59 ] 
MemRefHandle(i)	 =>[ 59 ] 
MemRefHandle((this))	 =>[ 60 ] 
MemRefHandle(((this) -> numbodies))	 =>[ 61 ] 
MemRefHandle(i)	 =>[ 59 ] 
MemRefHandle(b)	 =>[ 62 ] 
MemRefHandle((this))	 =>[ 60 ] 
MemRefHandle(((this) -> bodies))	 =>[ 61 ] 
MemRefHandle(i)	 =>[ 59 ] 
MemRefHandle((((this) -> bodies)[i]))	 =>[ 63 ] 
MemRefHandle(b)	 =>[ 62 ] 
MemRefHandle(b -> walksub)	 =>[ 42 ] 
MemRefHandle((this))	 =>[ 60 ] 
MemRefHandle(((this) -> BH_root))	 =>[ 61 ] 
MemRefHandle((this))	 =>[ 60 ] 
MemRefHandle(((this) -> size))	 =>[ 61 ] 
MemRefHandle((this))	 =>[ 60 ] 
MemRefHandle(((this) -> size))	 =>[ 61 ] 

		ProcHandle	 => std::map<int,OA_ptr<Location> >
ProcHandle(vector::vecAdd)	 =>			int	 => std::map<int,OA_ptr<Location> >
1	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: DEF
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(this::vector::vecAdd)					)
					mNumDeref: 1				)			) ] 
2	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(this::vector::vecAdd)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
3	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(this::vector::vecAdd)
					mLocal: 0
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
4	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(v)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
5	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(v)					)
					mNumDeref: 1				)			) ] 

ProcHandle(body::subdivp)	 =>			int	 => std::map<int,OA_ptr<Location> >
7	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(drsq)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
8	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(Parms)
					mLocal: 0
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
9	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(i)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
10	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(d)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
11	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(n)
					mLocal: 1
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
12	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(this::body::subdivp)
					mLocal: 0
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
13	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(dsq)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 

ProcHandle(body::computeInter)	 =>			int	 => std::map<int,OA_ptr<Location> >
8	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(Parms)
					mLocal: 0
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
16	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(drsq)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
17	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(i)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
18	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(d)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
19	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(n)
					mLocal: 1
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
20	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(this::body::computeInter)
					mLocal: 0
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
21	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(inc)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
22	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(n)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
23	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 1
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: DEF
						mSymHandle: SymHandle(n)					)
					mNumDeref: 1				)			)    
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(n)					)
					mNumDeref: 1				)			) ] 
24	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(r)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
25	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(i)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
26	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(res)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
27	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: DEF
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(res)					)
					mNumDeref: 1				)			) ] 

ProcHandle(body::gravsub)	 =>			int	 => std::map<int,OA_ptr<Location> >
23	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 1
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(n)					)
					mNumDeref: 1				)			) ] 
29	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(d)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
30	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(this::body::gravsub)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
31	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:body::computeInter)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
32	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(n)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
33	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(tmpv)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
34	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: DEF
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(this::body::gravsub)					)
					mNumDeref: 1				)			) ] 
36	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:vector::vecAdd)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 

ProcHandle(body::openCell)	 =>			int	 => std::map<int,OA_ptr<Location> >
37	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(i)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
38	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(n)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
39	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(c)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
40	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(c)
					mLocal: 1
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
41	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(this::body::openCell)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
42	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:body::walksub)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
43	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(dsq)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 

ProcHandle(body::openLeaf)	 =>			int	 => std::map<int,OA_ptr<Location> >
44	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(i)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
45	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(l)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
46	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(l)					)
					mNumDeref: 1				)			) ] 
47	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(b)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
48	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(l)
					mLocal: 1
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 
49	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(this::body::openLeaf)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
50	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:body::gravsub)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 

ProcHandle(body::walksub)	 =>			int	 => std::map<int,OA_ptr<Location> >
50	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:body::gravsub)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
51	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(this::body::walksub)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
52	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:body::subdivp)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
53	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(n)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
54	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(dsq)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
55	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(c)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
56	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:body::openCell)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
57	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(l)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
58	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:body::openLeaf)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 

ProcHandle(nbody::computeForces)	 =>			int	 => std::map<int,OA_ptr<Location> >
42	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(method:body::walksub)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
59	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(i)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
60	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(this::nbody::computeForces)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 
61	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(this::nbody::computeForces)					)
					mNumDeref: 1				)			) ] 
62	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(b)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
63	 =>[ 
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 0
					mMemRefType: USE
					mMRE: 
					Deref(
						mAddressOf: 0
						mFullAccuracy: 0
						mMemRefType: USE
						mMRE: 
						NamedRef(
							mAddressOf: 0
							mFullAccuracy: 1
							mMemRefType: USE
							mSymHandle: SymHandle(this::nbody::computeForces)						)
						mNumDeref: 1					)
					mNumDeref: 1				)			) ] 



)
