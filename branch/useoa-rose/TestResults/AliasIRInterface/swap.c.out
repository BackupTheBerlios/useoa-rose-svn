"TestCases/AliasTests/swap.c", line 22: warning: variable "j" was declared but
          never referenced
    int i,j;
          ^


PROCEDURE = { < ProcHandle("swap"), SymHandle("swap") > }
    FORMALS = {
        [
            < 0, SymHandle("v") >
            < 1, SymHandle("i") >
            < 2, SymHandle("j") >
        ] }
    MEMREFEXPRS = { StmtHandle("void swap(int *v,int i,int j){int temp;temp =(v[i]);v[i] =(v[j]);v[j] = temp;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{int temp;temp =(v[i]);v[i] =(v[j]);v[j] = temp;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int temp;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("temp =(v[i]);") =>
        [
            MemRefHandle("temp") => 
                NamedRef( DEF, SymHandle("temp"), F, full)
            MemRefHandle("v") => 
                NamedRef( USE, SymHandle("v"), F, full)
            MemRefHandle("i") => 
                NamedRef( USE, SymHandle("i"), F, full)
            MemRefHandle("(v[i])") => 
                Deref( USE, NamedRef( USE, SymHandle("v"), F, full), 1, F, part)
        ] }
    MEMREFEXPRS = { StmtHandle("v[i] =(v[j]);") =>
        [
            MemRefHandle("v") => 
                NamedRef( USE, SymHandle("v"), F, full)
            MemRefHandle("i") => 
                NamedRef( USE, SymHandle("i"), F, full)
            MemRefHandle("v") => 
                NamedRef( USE, SymHandle("v"), F, full)
            MemRefHandle("j") => 
                NamedRef( USE, SymHandle("j"), F, full)
            MemRefHandle("v[i]") => 
                Deref( DEF, NamedRef( USE, SymHandle("v"), F, full), 1, F, part)
            MemRefHandle("(v[j])") => 
                Deref( USE, NamedRef( USE, SymHandle("v"), F, full), 1, F, part)
        ] }
    MEMREFEXPRS = { StmtHandle("v[j] = temp;") =>
        [
            MemRefHandle("v") => 
                NamedRef( USE, SymHandle("v"), F, full)
            MemRefHandle("j") => 
                NamedRef( USE, SymHandle("j"), F, full)
            MemRefHandle("temp") => 
                NamedRef( USE, SymHandle("temp"), F, full)
            MemRefHandle("v[j]") => 
                Deref( DEF, NamedRef( USE, SymHandle("v"), F, full), 1, F, part)
        ] }
    LOCATION = { < SymHandle("v"), local > }
    LOCATION = { < SymHandle("i"), local > }
    LOCATION = { < SymHandle("j"), local > }
    LOCATION = { < SymHandle("temp"), local > }
    LOCATION = { < SymHandle("swap"), not local > }

PROCEDURE = { < ProcHandle("main"), SymHandle("main") > }
    MEMREFEXPRS = { StmtHandle("extern "C" struct _IO_FILE_plus _IO_2_1_stdin_;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("extern "C" struct _IO_FILE_plus _IO_2_1_stdout_;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("extern "C" struct _IO_FILE_plus _IO_2_1_stderr_;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int main(){int a[5];int i;int j;for(i = 0;i < 4;i++) {swap(a,i,(i + 1));}return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{int a[5];int i;int j;for(i = 0;i < 4;i++) {swap(a,i,(i + 1));}return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int a[5];") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int i;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int j;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("for(i = 0;i < 4;i++) {swap(a,i,(i + 1));}") =>
        [
            MemRefHandle("i") => 
                NamedRef( DEF, SymHandle("i"), F, full)
            MemRefHandle("i") => 
                NamedRef( USE, SymHandle("i"), F, full)
            MemRefHandle("i") => 
                NamedRef( DEF, SymHandle("i"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("{swap(a,i,(i + 1));}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("swap(a,i,(i + 1));") =>
        [
            MemRefHandle("a") => 
                NamedRef( USE, SymHandle("a"), T, full)
            MemRefHandle("i") => 
                NamedRef( USE, SymHandle("i"), F, full)
            MemRefHandle("i") => 
                NamedRef( USE, SymHandle("i"), F, full)
        ] }
    CALLSITES = { StmtHandle("swap(a,i,(i + 1));") =>
        [
            CallHandle("swap(a,i,(i + 1))") => 
                NamedRef( USE, SymHandle("swap"), F, full)
        ] }
    PARAMBINDPTRASSIGNPAIRS = { CallHandle("swap(a,i,(i + 1))") =>
        [
            < 0, NamedRef( USE, SymHandle("a"), T, full) >
        ] }
    MEMREFEXPRS = { StmtHandle("return 0;") =>
        [
        ] }
    LOCATION = { < SymHandle("a"), local > }
    LOCATION = { < SymHandle("i"), local > }
    LOCATION = { < SymHandle("swap"), not local > }
    LOCATION = { < SymHandle("main"), not local > }
