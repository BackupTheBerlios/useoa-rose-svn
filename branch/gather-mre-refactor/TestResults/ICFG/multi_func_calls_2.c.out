
graph ICFG:

    subgraph main_0:

        Node 10: 
            ==  ICFG ENTRY_NODE 10 == (entry)


        Node 14: 
            ==  ICFG CFLOW_NODE 14 ==
int x = read();


        Node 15: 
            ==  ICFG CALL_NODE 15 ==
x = foo(bar(x),zoo(x));


        Node 17: 
            ==  ICFG RETURN_NODE 17 ==


        Node 42: 
            ==  ICFG CFLOW_NODE 42 ==
return 0;


        Node 43: 
            ==  ICFG EXIT_NODE 43 == (exit)


        Edge: 14 => 15
            

        Edge: 15 => 17
            CALL_RETURN

        Edge: 17 => 42
            

        Edge: 10 => 14
            

        Edge: 42 => 43
            


    subgraph foo_1:

        Node 24: 
            ==  ICFG ENTRY_NODE 24 ==


        Node 25: 
            ==  ICFG EXIT_NODE 25 ==


        Node 44: 
            ==  ICFG CFLOW_NODE 44 ==
int res;
if(a > 0) {res =(1 + d);}else {res =(5 + d);}


        Node 45: 
            ==  ICFG CFLOW_NODE 45 ==
res =(1 + d);


        Node 46: 
            ==  ICFG CFLOW_NODE 46 ==
res =(5 + d);


        Node 47: 
            ==  ICFG CFLOW_NODE 47 ==
return res;


        Edge: 47 => 25
            

        Edge: 24 => 44
            

        Edge: 44 => 45
            

        Edge: 44 => 46
            

        Edge: 45 => 47
            

        Edge: 46 => 47
            


    subgraph bar_2:

        Node 32: 
            ==  ICFG ENTRY_NODE 32 ==


        Node 33: 
            ==  ICFG EXIT_NODE 33 ==


        Node 48: 
            ==  ICFG CFLOW_NODE 48 ==
int res;
if(b > 180) {res =((int )((5) * cos((b))));}else {res = 0;}


        Node 49: 
            ==  ICFG CFLOW_NODE 49 ==
res =((int )((5) * cos((b))));


        Node 50: 
            ==  ICFG CFLOW_NODE 50 ==
res = 0;


        Node 51: 
            ==  ICFG CFLOW_NODE 51 ==
return res;


        Edge: 51 => 33
            

        Edge: 32 => 48
            

        Edge: 48 => 49
            

        Edge: 48 => 50
            

        Edge: 49 => 51
            

        Edge: 50 => 51
            


    subgraph zoo_3:

        Node 40: 
            ==  ICFG ENTRY_NODE 40 ==


        Node 41: 
            ==  ICFG EXIT_NODE 41 ==


        Node 52: 
            ==  ICFG CFLOW_NODE 52 ==
int res;
if(c < 10) {res = 3;}else {res = 5;}


        Node 53: 
            ==  ICFG CFLOW_NODE 53 ==
res = 3;


        Node 54: 
            ==  ICFG CFLOW_NODE 54 ==
res = 5;


        Node 55: 
            ==  ICFG CFLOW_NODE 55 ==
return res;


        Edge: 55 => 41
            

        Edge: 40 => 52
            

        Edge: 52 => 53
            

        Edge: 52 => 54
            

        Edge: 53 => 55
            

        Edge: 54 => 55
            


    Edge: 15 => 24
        CALL_(foo(bar(x),zoo(x))),style=dashed,color=red

    Edge: 25 => 17
        RETURN_(foo(bar(x),zoo(x))),style=dashed,color=blue

    Edge: 15 => 32
        CALL_(bar(x)),style=dashed,color=red

    Edge: 33 => 17
        RETURN_(bar(x)),style=dashed,color=blue

    Edge: 15 => 40
        CALL_(zoo(x)),style=dashed,color=red

    Edge: 41 => 17
        RETURN_(zoo(x)),style=dashed,color=blue


digraph ICFG {
    node [shape=rectangle];
    subgraph cluster_main_0 {
        label="main_0"
        10 [ label="==  ICFG ENTRY_NODE 10 == (entry)\n" ];
        14 [ label="==  ICFG CFLOW_NODE 14 ==\nint x = read();\n" ];
        15 [ label="==  ICFG CALL_NODE 15 ==\nx = foo(bar(x),zoo(x));\n" ];
        17 [ label="==  ICFG RETURN_NODE 17 ==\n" ];
        42 [ label="==  ICFG CFLOW_NODE 42 ==\nreturn 0;\n" ];
        43 [ label="==  ICFG EXIT_NODE 43 == (exit)\n" ];
        14 -> 15 [ label="" ];
        15 -> 17 [ label="CALL_RETURN" ];
        17 -> 42 [ label="" ];
        10 -> 14 [ label="" ];
        42 -> 43 [ label="" ];
    }
    subgraph cluster_foo_1 {
        label="foo_1"
        24 [ label="==  ICFG ENTRY_NODE 24 ==\n" ];
        25 [ label="==  ICFG EXIT_NODE 25 ==\n" ];
        44 [ label="==  ICFG CFLOW_NODE 44 ==\nint res;\nif(a > 0) {res =(1 + d);}else {res =(5 + d);}\n" ];
        45 [ label="==  ICFG CFLOW_NODE 45 ==\nres =(1 + d);\n" ];
        46 [ label="==  ICFG CFLOW_NODE 46 ==\nres =(5 + d);\n" ];
        47 [ label="==  ICFG CFLOW_NODE 47 ==\nreturn res;\n" ];
        47 -> 25 [ label="" ];
        24 -> 44 [ label="" ];
        44 -> 45 [ label="" ];
        44 -> 46 [ label="" ];
        45 -> 47 [ label="" ];
        46 -> 47 [ label="" ];
    }
    subgraph cluster_bar_2 {
        label="bar_2"
        32 [ label="==  ICFG ENTRY_NODE 32 ==\n" ];
        33 [ label="==  ICFG EXIT_NODE 33 ==\n" ];
        48 [ label="==  ICFG CFLOW_NODE 48 ==\nint res;\nif(b > 180) {res =((int )((5) * cos((b))));}else {res = 0;}\n" ];
        49 [ label="==  ICFG CFLOW_NODE 49 ==\nres =((int )((5) * cos((b))));\n" ];
        50 [ label="==  ICFG CFLOW_NODE 50 ==\nres = 0;\n" ];
        51 [ label="==  ICFG CFLOW_NODE 51 ==\nreturn res;\n" ];
        51 -> 33 [ label="" ];
        32 -> 48 [ label="" ];
        48 -> 49 [ label="" ];
        48 -> 50 [ label="" ];
        49 -> 51 [ label="" ];
        50 -> 51 [ label="" ];
    }
    subgraph cluster_zoo_3 {
        label="zoo_3"
        40 [ label="==  ICFG ENTRY_NODE 40 ==\n" ];
        41 [ label="==  ICFG EXIT_NODE 41 ==\n" ];
        52 [ label="==  ICFG CFLOW_NODE 52 ==\nint res;\nif(c < 10) {res = 3;}else {res = 5;}\n" ];
        53 [ label="==  ICFG CFLOW_NODE 53 ==\nres = 3;\n" ];
        54 [ label="==  ICFG CFLOW_NODE 54 ==\nres = 5;\n" ];
        55 [ label="==  ICFG CFLOW_NODE 55 ==\nreturn res;\n" ];
        55 -> 41 [ label="" ];
        40 -> 52 [ label="" ];
        52 -> 53 [ label="" ];
        52 -> 54 [ label="" ];
        53 -> 55 [ label="" ];
        54 -> 55 [ label="" ];
    }
    15 -> 24 [ label="CALL_(foo(bar(x),zoo(x)))",style=dashed,color=red ];
    25 -> 17 [ label="RETURN_(foo(bar(x),zoo(x)))",style=dashed,color=blue ];
    15 -> 32 [ label="CALL_(bar(x))",style=dashed,color=red ];
    33 -> 17 [ label="RETURN_(bar(x))",style=dashed,color=blue ];
    15 -> 40 [ label="CALL_(zoo(x))",style=dashed,color=red ];
    41 -> 17 [ label="RETURN_(zoo(x))",style=dashed,color=blue ];}

*******  end of DoICFG *********

