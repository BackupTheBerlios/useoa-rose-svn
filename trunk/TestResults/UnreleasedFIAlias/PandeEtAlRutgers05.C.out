
EquivSets(
    mMemRefToProc: MemRefHandle	 => ProcHandle
        MemRefHandle(a)	 => ProcHandle(Base::foo)
        MemRefHandle(a)	 => ProcHandle(Derived::foo)
        MemRefHandle(b)	 => ProcHandle(Derived::foo)
        MemRefHandle(argc)	 => ProcHandle(main)
        MemRefHandle(p)	 => ProcHandle(main)
        MemRefHandle(q)	 => ProcHandle(main)
        MemRefHandle(b)	 => ProcHandle(main)
        MemRefHandle(p)	 => ProcHandle(main)
        MemRefHandle(q)	 => ProcHandle(main)
        MemRefHandle(s)	 => ProcHandle(main)
        MemRefHandle(argv)	 => ProcHandle(main)
        MemRefHandle(s)	 => ProcHandle(main)
        MemRefHandle(p)	 => ProcHandle(main)
        MemRefHandle(q)	 => ProcHandle(main)
        MemRefHandle(q)	 => ProcHandle(main)
        MemRefHandle(q)	 => ProcHandle(main)
        MemRefHandle(a)	 => ProcHandle(main)
        MemRefHandle(p)	 => ProcHandle(main)
        MemRefHandle(Base)	 => ProcHandle(Base::foo)
        MemRefHandle(Derived)	 => ProcHandle(Derived::foo)
        MemRefHandle(Derived)	 => ProcHandle(Derived::foo)
        MemRefHandle(Base)	 => ProcHandle(main)
        MemRefHandle(Derived)	 => ProcHandle(main)
        MemRefHandle(Base)	 => ProcHandle(main)
        MemRefHandle(Derived)	 => ProcHandle(main)
        MemRefHandle(Base)	 => ProcHandle(main)
        MemRefHandle(Base)	 => ProcHandle(main)
        MemRefHandle((new Base ))	 => ProcHandle(Base::foo)
        MemRefHandle((new Derived ))	 => ProcHandle(Derived::foo)
        MemRefHandle((new Derived ))	 => ProcHandle(Derived::foo)
        MemRefHandle((new Base ))	 => ProcHandle(main)
        MemRefHandle((new Derived ))	 => ProcHandle(main)
        MemRefHandle((new Base ))	 => ProcHandle(main)
        MemRefHandle((new Derived ))	 => ProcHandle(main)
        MemRefHandle((new Base ))	 => ProcHandle(main)
        MemRefHandle((new Base ))	 => ProcHandle(main)
        MemRefHandle(&r)	 => ProcHandle(main)
        MemRefHandle(s -> Derived::bar)	 => ProcHandle(main)
        MemRefHandle(p -> foo)	 => ProcHandle(main)
        MemRefHandle(q -> foo)	 => ProcHandle(main)
        MemRefHandle(q -> foo)	 => ProcHandle(main)
        MemRefHandle(a -> bar)	 => ProcHandle(main)
        MemRefHandle(p -> baz)	 => ProcHandle(main)
    mMemRefToSets: MemRefHandle	 => int
        MemRefHandle(a)	 => [ 0 ] 
        MemRefHandle(a)	 => [ 0 ] 
        MemRefHandle(b)	 => [ 0 ] 
        MemRefHandle(argc)	 => [ 0 ] 
        MemRefHandle(p)	 => [ 0 ] 
        MemRefHandle(q)	 => [ 0 ] 
        MemRefHandle(b)	 => [ 0 ] 
        MemRefHandle(p)	 => [ 0 ] 
        MemRefHandle(q)	 => [ 0 ] 
        MemRefHandle(s)	 => [ 0 ] 
        MemRefHandle(argv)	 => [ 0 ] 
        MemRefHandle(s)	 => [ 0 ] 
        MemRefHandle(p)	 => [ 0 ] 
        MemRefHandle(q)	 => [ 0 ] 
        MemRefHandle(q)	 => [ 0 ] 
        MemRefHandle(q)	 => [ 0 ] 
        MemRefHandle(a)	 => [ 0 ] 
        MemRefHandle(p)	 => [ 0 ] 
        MemRefHandle(Base)	 => [ 0 ] 
        MemRefHandle(Derived)	 => [ 0 ] 
        MemRefHandle(Derived)	 => [ 0 ] 
        MemRefHandle(Base)	 => [ 0 ] 
        MemRefHandle(Derived)	 => [ 0 ] 
        MemRefHandle(Base)	 => [ 0 ] 
        MemRefHandle(Derived)	 => [ 0 ] 
        MemRefHandle(Base)	 => [ 0 ] 
        MemRefHandle(Base)	 => [ 0 ] 
        MemRefHandle(s -> Derived::bar)	 => [ 0 ] 
        MemRefHandle(p -> foo)	 => [ 0 ] 
        MemRefHandle(q -> foo)	 => [ 0 ] 
        MemRefHandle(q -> foo)	 => [ 0 ] 
        MemRefHandle(a -> bar)	 => [ 0 ] 
        MemRefHandle(p -> baz)	 => [ 0 ] 
    mProcNSetToLocs: ProcHandle	 => std::map<int,OA_ptr<Location> >
        ProcHandle(main)	 => 
        SetToLocs: int	 => std::map<int,OA_ptr<Location> >
            0	 => [ 
                UnknownLoc(
                ) ] 
)
