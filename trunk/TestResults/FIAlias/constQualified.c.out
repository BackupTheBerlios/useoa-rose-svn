
EquivSets(
		mMemRefToProc: MemRefHandle	 => ProcHandle
MemRefHandle(i)	 =>ProcHandle(main)
MemRefHandle((const_array + i))	 =>ProcHandle(main)
MemRefHandle(q)	 =>ProcHandle(main)
MemRefHandle(x)	 =>ProcHandle(main)
MemRefHandle(q)	 =>ProcHandle(main)
MemRefHandle(*q)	 =>ProcHandle(main)
MemRefHandle(p)	 =>ProcHandle(main)
MemRefHandle(&i)	 =>ProcHandle(main)
MemRefHandle(p)	 =>ProcHandle(main)
MemRefHandle(*p)	 =>ProcHandle(main)
MemRefHandle(y)	 =>ProcHandle(main)
MemRefHandle(q)	 =>ProcHandle(main)
MemRefHandle(*q)	 =>ProcHandle(main)
MemRefHandle(x)	 =>ProcHandle(main)
MemRefHandle(y)	 =>ProcHandle(main)


		mMemRefToSets: MemRefHandle	 => int
MemRefHandle(i)	 =>[ 1 ] 
MemRefHandle(q)	 =>[ 3 ] 
MemRefHandle(x)	 =>[ 4 ] 
MemRefHandle(q)	 =>[ 3 ] 
MemRefHandle(*q)	 =>[ 10 ] 
MemRefHandle(p)	 =>[ 6 ] 
MemRefHandle(p)	 =>[ 6 ] 
MemRefHandle(*p)	 =>[ 1 ] 
MemRefHandle(y)	 =>[ 9 ] 
MemRefHandle(q)	 =>[ 3 ] 
MemRefHandle(*q)	 =>[ 10 ] 
MemRefHandle(x)	 =>[ 4 ] 
MemRefHandle(y)	 =>[ 9 ] 


		mProcNSetToLocs: ProcHandle	 => std::map<int,OA_ptr<Location> >
ProcHandle(main)	 =>
			SetToLocs: int	 => std::map<int,OA_ptr<Location> >
1	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(i)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
3	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(q)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
4	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(x)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
6	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(p)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
9	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(y)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
10	 =>[ 
			LocSubSet(
				mLoc: 
				NamedLoc(
					mSymHandle: SymHandle(const_array)
					mLocal: 0
					mFullOverlap: 
					mPartOverlap: 				)
				mFull: 0			) ] 



)
