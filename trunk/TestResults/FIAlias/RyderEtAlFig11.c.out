
EquivSets(
		mMemRefToProc: MemRefHandle	 => ProcHandle
MemRefHandle(b)	 =>ProcHandle(R)
MemRefHandle(( *b))	 =>ProcHandle(R)
MemRefHandle(b)	 =>ProcHandle(R)
MemRefHandle(&k)	 =>ProcHandle(R)
MemRefHandle(b)	 =>ProcHandle(R)
MemRefHandle(*b)	 =>ProcHandle(R)
MemRefHandle(b)	 =>ProcHandle(R)
MemRefHandle(( *b))	 =>ProcHandle(R)
MemRefHandle(&x)	 =>ProcHandle(main)
MemRefHandle(&y)	 =>ProcHandle(main)


		mMemRefToSets: MemRefHandle	 => int
MemRefHandle(b)	 =>[ 1 ] 
MemRefHandle(( *b))	 =>[ 8 ] 
MemRefHandle(b)	 =>[ 1 ] 
MemRefHandle(b)	 =>[ 1 ] 
MemRefHandle(*b)	 =>[ 8 ] 
MemRefHandle(b)	 =>[ 1 ] 
MemRefHandle(( *b))	 =>[ 8 ] 


		mProcNSetToLocs: ProcHandle	 => std::map<int,OA_ptr<Location> >
ProcHandle(R)	 =>
			SetToLocs: int	 => std::map<int,OA_ptr<Location> >
1	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(b)
				mLocal: 1
				mFullOverlap: 
				mPartOverlap: 			) ] 
8	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(x)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			)    
			NamedLoc(
				mSymHandle: SymHandle(y)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			)    
			NamedLoc(
				mSymHandle: SymHandle(k)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			)    
			InvisibleLoc(
				mMRE: 
				Deref(
					mAddressOf: 0
					mFullAccuracy: 1
					mMemRefType: USE
					mMRE: 
					NamedRef(
						mAddressOf: 0
						mFullAccuracy: 1
						mMemRefType: USE
						mSymHandle: SymHandle(b)					)
					mNumDeref: 1				)			) ] 

ProcHandle(main)	 =>
			SetToLocs: int	 => std::map<int,OA_ptr<Location> >
8	 =>[ 
			NamedLoc(
				mSymHandle: SymHandle(x)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			)    
			NamedLoc(
				mSymHandle: SymHandle(y)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			)    
			NamedLoc(
				mSymHandle: SymHandle(k)
				mLocal: 0
				mFullOverlap: 
				mPartOverlap: 			) ] 



)
