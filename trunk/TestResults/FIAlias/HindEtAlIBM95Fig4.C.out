
EquivSets(
    mMemRefToProc: MemRefHandle	 => ProcHandle
        MemRefHandle(q)	 => ProcHandle(main)
        MemRefHandle(c)	 => ProcHandle(main)
        MemRefHandle(cond)	 => ProcHandle(main)
        MemRefHandle(B)	 => ProcHandle(B::createObj)
        MemRefHandle(D)	 => ProcHandle(D::createObj)
        MemRefHandle(E)	 => ProcHandle(E::createObj)
        MemRefHandle(B)	 => ProcHandle(main)
        MemRefHandle(C)	 => ProcHandle(main)
        MemRefHandle(D)	 => ProcHandle(main)
        MemRefHandle(E)	 => ProcHandle(main)
        MemRefHandle(new B)	 => ProcHandle(B::createObj)
        MemRefHandle((new D ))	 => ProcHandle(D::createObj)
        MemRefHandle((new E ))	 => ProcHandle(E::createObj)
        MemRefHandle((new D ))	 => ProcHandle(main)
        MemRefHandle((new E ))	 => ProcHandle(main)
        MemRefHandle(r)	 => ProcHandle(main)
        MemRefHandle(b)	 => ProcHandle(main)
        MemRefHandle(p)	 => ProcHandle(main)
        MemRefHandle(cond)	 => ProcHandle(main)
        MemRefHandle(b)	 => ProcHandle(main)
        MemRefHandle(r)	 => ProcHandle(main)
        MemRefHandle(b)	 => ProcHandle(main)
        MemRefHandle(b)	 => ProcHandle(main)
        MemRefHandle(r)	 => ProcHandle(main)
        MemRefHandle(b)	 => ProcHandle(main)
        MemRefHandle(p)	 => ProcHandle(main)
        MemRefHandle(q)	 => ProcHandle(main)
        MemRefHandle(q.data)	 => ProcHandle(B::changeData)
        MemRefHandle(q.data)	 => ProcHandle(C::changeData)
        MemRefHandle(q.data)	 => ProcHandle(D::changeData)
        MemRefHandle(( *( *p)).changeData)	 => ProcHandle(main)
        MemRefHandle((q.data))	 => ProcHandle(main)
        MemRefHandle(&r)	 => ProcHandle(main)
        MemRefHandle(b -> createObj)	 => ProcHandle(main)
        MemRefHandle(b -> createObj)	 => ProcHandle(main)
        MemRefHandle(( *p))	 => ProcHandle(main)
    mMemRefToSets: MemRefHandle	 => int
        MemRefHandle(q)	 => [ 0 ] 
        MemRefHandle(c)	 => [ 0 ] 
        MemRefHandle(cond)	 => [ 0 ] 
        MemRefHandle(B)	 => [ 0 ] 
        MemRefHandle(D)	 => [ 0 ] 
        MemRefHandle(E)	 => [ 0 ] 
        MemRefHandle(B)	 => [ 0 ] 
        MemRefHandle(C)	 => [ 0 ] 
        MemRefHandle(D)	 => [ 0 ] 
        MemRefHandle(E)	 => [ 0 ] 
        MemRefHandle(r)	 => [ 0 ] 
        MemRefHandle(b)	 => [ 0 ] 
        MemRefHandle(p)	 => [ 0 ] 
        MemRefHandle(cond)	 => [ 0 ] 
        MemRefHandle(b)	 => [ 0 ] 
        MemRefHandle(r)	 => [ 0 ] 
        MemRefHandle(b)	 => [ 0 ] 
        MemRefHandle(b)	 => [ 0 ] 
        MemRefHandle(r)	 => [ 0 ] 
        MemRefHandle(b)	 => [ 0 ] 
        MemRefHandle(p)	 => [ 0 ] 
        MemRefHandle(q.data)	 => [ 0 ] 
        MemRefHandle(q.data)	 => [ 0 ] 
        MemRefHandle(q.data)	 => [ 0 ] 
        MemRefHandle(( *( *p)).changeData)	 => [ 0 ] 
        MemRefHandle((q.data))	 => [ 0 ] 
        MemRefHandle(b -> createObj)	 => [ 0 ] 
        MemRefHandle(b -> createObj)	 => [ 0 ] 
        MemRefHandle(( *p))	 => [ 0 ] 
    mProcNSetToLocs: ProcHandle	 => std::map<int,OA_ptr<Location> >
        ProcHandle(main)	 => 
        SetToLocs: int	 => OA_ptr<Location>
            0	 => [ 
                UnknownLoc(
                ) ] 
)
