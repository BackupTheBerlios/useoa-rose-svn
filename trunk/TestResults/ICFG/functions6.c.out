
graph ICFG:

    subgraph bar_0:

        Node 12: 
            ==  ICFG ENTRY_NODE 12 ==


        Node 13: 
            ==  ICFG CFLOW_NODE 13 ==
int res;
if(n == 1) {res = 1;}else {res = foo(5);}


        Node 14: 
            ==  ICFG CFLOW_NODE 14 ==
res = 1;



        Node 17: 
            ==  ICFG CALL_NODE 17 ==
res = foo(5);


        Node 19: 
            ==  ICFG RETURN_NODE 19 ==


        Node 28: 
            ==  ICFG CFLOW_NODE 28 ==



        Node 29: 
            ==  ICFG CFLOW_NODE 29 ==
return res;


        Node 30: 
            ==  ICFG CFLOW_NODE 30 == (entry)



        Node 31: 
            ==  ICFG EXIT_NODE 31 ==


        Edge: 17 => 19
            CALL_RETURN

        Edge: 19 => 28
            

        Edge: 12 => 13
            

        Edge: 13 => 14
            

        Edge: 13 => 17
            

        Edge: 14 => 29
            

        Edge: 28 => 29
            

        Edge: 29 => 31
            

        Edge: 30 => 31
            


    subgraph foo_1:

        Node 26: 
            ==  ICFG ENTRY_NODE 26 ==


        Node 27: 
            ==  ICFG EXIT_NODE 27 ==


        Node 32: 
            ==  ICFG CFLOW_NODE 32 ==
int res;
if(n == 1) {res = bar(1);}else {res = 5;}


        Node 35: 
            ==  ICFG CALL_NODE 35 ==
res = bar(1);


        Node 37: 
            ==  ICFG RETURN_NODE 37 ==


        Node 38: 
            ==  ICFG CFLOW_NODE 38 ==



        Node 39: 
            ==  ICFG CFLOW_NODE 39 ==
res = 5;



        Node 40: 
            ==  ICFG CFLOW_NODE 40 ==



        Edge: 35 => 37
            CALL_RETURN

        Edge: 37 => 38
            

        Edge: 40 => 27
            

        Edge: 26 => 32
            

        Edge: 32 => 35
            

        Edge: 32 => 39
            

        Edge: 38 => 40
            

        Edge: 39 => 40
            


    subgraph functiontest_2:

        Node 44: 
            ==  ICFG ENTRY_NODE 44 == (entry)


        Node 48: 
            ==  ICFG CFLOW_NODE 48 ==
int n = 7;
float x =(4.500000000000000);


        Node 49: 
            ==  ICFG CALL_NODE 49 ==
n = foo(n);


        Node 51: 
            ==  ICFG RETURN_NODE 51 ==


        Node 52: 
            ==  ICFG CFLOW_NODE 52 ==
x =((sin((x))));



        Node 53: 
            ==  ICFG EXIT_NODE 53 == (exit)


        Edge: 48 => 49
            

        Edge: 49 => 51
            CALL_RETURN

        Edge: 51 => 52
            

        Edge: 44 => 48
            

        Edge: 52 => 53
            


    Edge: 17 => 26
        CALL_(foo(5)),style=dashed,color=red

    Edge: 27 => 19
        RETURN_(foo(5)),style=dashed,color=blue

    Edge: 35 => 12
        CALL_(bar(1)),style=dashed,color=red

    Edge: 31 => 37
        RETURN_(bar(1)),style=dashed,color=blue

    Edge: 49 => 26
        CALL_(foo(n)),style=dashed,color=red

    Edge: 27 => 51
        RETURN_(foo(n)),style=dashed,color=blue


digraph ICFG {
    node [shape=rectangle];
    subgraph cluster_bar_0 {
        label="bar_0"
        12 [ label="==  ICFG ENTRY_NODE 12 ==\n" ];
        13 [ label="==  ICFG CFLOW_NODE 13 ==\nint res;\nif(n == 1) {res = 1;}else {res = foo(5);}\n" ];
        14 [ label="==  ICFG CFLOW_NODE 14 ==\nres = 1;\n\n" ];
        17 [ label="==  ICFG CALL_NODE 17 ==\nres = foo(5);\n" ];
        19 [ label="==  ICFG RETURN_NODE 19 ==\n" ];
        28 [ label="==  ICFG CFLOW_NODE 28 ==\n\n" ];
        29 [ label="==  ICFG CFLOW_NODE 29 ==\nreturn res;\n" ];
        30 [ label="==  ICFG CFLOW_NODE 30 == (entry)\n\n" ];
        31 [ label="==  ICFG EXIT_NODE 31 ==\n" ];
        17 -> 19 [ label="CALL_RETURN" ];
        19 -> 28 [ label="" ];
        12 -> 13 [ label="" ];
        13 -> 14 [ label="" ];
        13 -> 17 [ label="" ];
        14 -> 29 [ label="" ];
        28 -> 29 [ label="" ];
        29 -> 31 [ label="" ];
        30 -> 31 [ label="" ];
    }
    subgraph cluster_foo_1 {
        label="foo_1"
        26 [ label="==  ICFG ENTRY_NODE 26 ==\n" ];
        27 [ label="==  ICFG EXIT_NODE 27 ==\n" ];
        32 [ label="==  ICFG CFLOW_NODE 32 ==\nint res;\nif(n == 1) {res = bar(1);}else {res = 5;}\n" ];
        35 [ label="==  ICFG CALL_NODE 35 ==\nres = bar(1);\n" ];
        37 [ label="==  ICFG RETURN_NODE 37 ==\n" ];
        38 [ label="==  ICFG CFLOW_NODE 38 ==\n\n" ];
        39 [ label="==  ICFG CFLOW_NODE 39 ==\nres = 5;\n\n" ];
        40 [ label="==  ICFG CFLOW_NODE 40 ==\n\n" ];
        35 -> 37 [ label="CALL_RETURN" ];
        37 -> 38 [ label="" ];
        40 -> 27 [ label="" ];
        26 -> 32 [ label="" ];
        32 -> 35 [ label="" ];
        32 -> 39 [ label="" ];
        38 -> 40 [ label="" ];
        39 -> 40 [ label="" ];
    }
    subgraph cluster_functiontest_2 {
        label="functiontest_2"
        44 [ label="==  ICFG ENTRY_NODE 44 == (entry)\n" ];
        48 [ label="==  ICFG CFLOW_NODE 48 ==\nint n = 7;\nfloat x =(4.500000000000000);\n" ];
        49 [ label="==  ICFG CALL_NODE 49 ==\nn = foo(n);\n" ];
        51 [ label="==  ICFG RETURN_NODE 51 ==\n" ];
        52 [ label="==  ICFG CFLOW_NODE 52 ==\nx =((sin((x))));\n\n" ];
        53 [ label="==  ICFG EXIT_NODE 53 == (exit)\n" ];
        48 -> 49 [ label="" ];
        49 -> 51 [ label="CALL_RETURN" ];
        51 -> 52 [ label="" ];
        44 -> 48 [ label="" ];
        52 -> 53 [ label="" ];
    }
    17 -> 26 [ label="CALL_(foo(5))",style=dashed,color=red ];
    27 -> 19 [ label="RETURN_(foo(5))",style=dashed,color=blue ];
    35 -> 12 [ label="CALL_(bar(1))",style=dashed,color=red ];
    31 -> 37 [ label="RETURN_(bar(1))",style=dashed,color=blue ];
    49 -> 26 [ label="CALL_(foo(n))",style=dashed,color=red ];
    27 -> 51 [ label="RETURN_(foo(n))",style=dashed,color=blue ];}

*******  end of DoICFG *********

