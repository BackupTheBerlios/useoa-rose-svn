
graph ICFG:

    subgraph main_0:

        Node 12: 
            ==  ICFG ENTRY_NODE 12 == (entry)


        Node 13: 
            ==  ICFG CFLOW_NODE 13 ==
int x = read();
fp = ::zoo;
if(x) {fp = ::foo;}else {fp = ::bar;}


        Node 14: 
            ==  ICFG CFLOW_NODE 14 ==
fp = ::foo;


        Node 15: 
            ==  ICFG CFLOW_NODE 15 ==
fp = ::bar;


        Node 18: 
            ==  ICFG CALL_NODE 18 ==
( *fp)();


        Node 20: 
            ==  ICFG RETURN_NODE 20 ==


        Node 36: 
            ==  ICFG EXIT_NODE 36 == (exit)


        Edge: 18 => 20
            CALL_RETURN

        Edge: 12 => 13
            

        Edge: 13 => 14
            

        Edge: 13 => 15
            

        Edge: 14 => 18
            

        Edge: 15 => 18
            

        Edge: 20 => 36
            


    subgraph foo_1:

        Node 24: 
            ==  ICFG ENTRY_NODE 24 ==


        Node 25: 
            ==  ICFG EXIT_NODE 25 ==


        Node 37: 
            ==  ICFG CFLOW_NODE 37 ==


        Edge: 37 => 25
            

        Edge: 24 => 37
            


    subgraph bar_2:

        Node 29: 
            ==  ICFG ENTRY_NODE 29 ==


        Node 30: 
            ==  ICFG EXIT_NODE 30 ==


        Node 38: 
            ==  ICFG CFLOW_NODE 38 ==


        Edge: 38 => 30
            

        Edge: 29 => 38
            


    subgraph zoo_3:

        Node 34: 
            ==  ICFG ENTRY_NODE 34 ==


        Node 35: 
            ==  ICFG EXIT_NODE 35 ==


        Node 39: 
            ==  ICFG CFLOW_NODE 39 ==


        Edge: 39 => 35
            

        Edge: 34 => 39
            


    Edge: 18 => 24
        CALL_(( *fp)()),style=dashed,color=red

    Edge: 25 => 20
        RETURN_(( *fp)()),style=dashed,color=blue

    Edge: 18 => 29
        CALL_(( *fp)()),style=dashed,color=red

    Edge: 30 => 20
        RETURN_(( *fp)()),style=dashed,color=blue

    Edge: 18 => 34
        CALL_(( *fp)()),style=dashed,color=red

    Edge: 35 => 20
        RETURN_(( *fp)()),style=dashed,color=blue


digraph ICFG {
    node [shape=rectangle];
    subgraph cluster_main_0 {
        label="main_0"
        12 [ label="==  ICFG ENTRY_NODE 12 == (entry)\n" ];
        13 [ label="==  ICFG CFLOW_NODE 13 ==\nint x = read();\nfp = ::zoo;\nif(x) {fp = ::foo;}else {fp = ::bar;}\n" ];
        14 [ label="==  ICFG CFLOW_NODE 14 ==\nfp = ::foo;\n" ];
        15 [ label="==  ICFG CFLOW_NODE 15 ==\nfp = ::bar;\n" ];
        18 [ label="==  ICFG CALL_NODE 18 ==\n( *fp)();\n" ];
        20 [ label="==  ICFG RETURN_NODE 20 ==\n" ];
        36 [ label="==  ICFG EXIT_NODE 36 == (exit)\n" ];
        18 -> 20 [ label="CALL_RETURN" ];
        12 -> 13 [ label="" ];
        13 -> 14 [ label="" ];
        13 -> 15 [ label="" ];
        14 -> 18 [ label="" ];
        15 -> 18 [ label="" ];
        20 -> 36 [ label="" ];
    }
    subgraph cluster_foo_1 {
        label="foo_1"
        24 [ label="==  ICFG ENTRY_NODE 24 ==\n" ];
        25 [ label="==  ICFG EXIT_NODE 25 ==\n" ];
        37 [ label="==  ICFG CFLOW_NODE 37 ==\n" ];
        37 -> 25 [ label="" ];
        24 -> 37 [ label="" ];
    }
    subgraph cluster_bar_2 {
        label="bar_2"
        29 [ label="==  ICFG ENTRY_NODE 29 ==\n" ];
        30 [ label="==  ICFG EXIT_NODE 30 ==\n" ];
        38 [ label="==  ICFG CFLOW_NODE 38 ==\n" ];
        38 -> 30 [ label="" ];
        29 -> 38 [ label="" ];
    }
    subgraph cluster_zoo_3 {
        label="zoo_3"
        34 [ label="==  ICFG ENTRY_NODE 34 ==\n" ];
        35 [ label="==  ICFG EXIT_NODE 35 ==\n" ];
        39 [ label="==  ICFG CFLOW_NODE 39 ==\n" ];
        39 -> 35 [ label="" ];
        34 -> 39 [ label="" ];
    }
    18 -> 24 [ label="CALL_(( *fp)())",style=dashed,color=red ];
    25 -> 20 [ label="RETURN_(( *fp)())",style=dashed,color=blue ];
    18 -> 29 [ label="CALL_(( *fp)())",style=dashed,color=red ];
    30 -> 20 [ label="RETURN_(( *fp)())",style=dashed,color=blue ];
    18 -> 34 [ label="CALL_(( *fp)())",style=dashed,color=red ];
    35 -> 20 [ label="RETURN_(( *fp)())",style=dashed,color=blue ];}

*******  end of DoICFG *********

