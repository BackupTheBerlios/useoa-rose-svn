Frontend Time: 0.090000
===== start of CFG =====

graph DGraph:

    Node 1: 
        ====== CFG node 1 ======


    Node 2: 
        ====== CFG node 2 ======
int i;
double x;
double y;
double f;
i = 0;
f = 0.0;


    Node 3: 
        ====== CFG node 3 ======
x =((3 * i));
y =((2) * x);
f +=(x + y);
i++;


    Node 4: 
        ====== CFG node 4 ======
do {x =((3 * i));y =((2) * x);f +=(x + y);i++;}while(i < 20);


    Node 5: 
        ====== CFG node 5 ======
return 0;


    Node 6: 
        ====== CFG node 6 ======


    Edge: 1 => 2
        { FALLTHROUGH_EDGE expr(0) }

    Edge: 2 => 3
        { FALLTHROUGH_EDGE expr(0) }

    Edge: 4 => 3
        { TRUE_EDGE expr(0) }

    Edge: 3 => 4
        { FALLTHROUGH_EDGE expr(0) }

    Edge: 4 => 5
        { FALSE_EDGE expr(0) }

    Edge: 5 => 6
        { RETURN_EDGE expr(0) }


digraph DGraph {
    node [shape=rectangle];
    1 [ label="====== CFG node 1 ======\n" ];
    2 [ label="====== CFG node 2 ======\nint i;\ndouble x;\ndouble y;\ndouble f;\ni = 0;\nf = 0.0;\n" ];
    3 [ label="====== CFG node 3 ======\nx =((3 * i));\ny =((2) * x);\nf +=(x + y);\ni++;\n" ];
    4 [ label="====== CFG node 4 ======\ndo {x =((3 * i));y =((2) * x);f +=(x + y);i++;}while(i < 20);\n" ];
    5 [ label="====== CFG node 5 ======\nreturn 0;\n" ];
    6 [ label="====== CFG node 6 ======\n" ];
    1 -> 2 [ label="{ FALLTHROUGH_EDGE expr(0) }" ];
    2 -> 3 [ label="{ FALLTHROUGH_EDGE expr(0) }" ];
    4 -> 3 [ label="{ TRUE_EDGE expr(0) }" ];
    3 -> 4 [ label="{ FALLTHROUGH_EDGE expr(0) }" ];
    4 -> 5 [ label="{ FALSE_EDGE expr(0) }" ];
    5 -> 6 [ label="{ RETURN_EDGE expr(0) }" ];}
