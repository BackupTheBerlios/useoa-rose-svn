
AliasTagResults(
    mMREToTags: OA::OA_ptr<MemRefExpr> 	 => OA::OA_ptr<std::set<AliasTag> > 
            
            NamedRef(
                mMemRefType: USE
                mSymHandle: SymHandle(malloc)
            )	 => [ 
                Tag(
                    mTagID: 1
                    # NamedRef(malloc)
                ) ] 
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(g)
            )	 => [ 
                Tag(
                    mTagID: 2
                    # NamedRef(g)
                ) ] 
            
            NamedRef(
                mMemRefType: USE
                mSymHandle: SymHandle(a)
            )	 => [ 
                Tag(
                    mTagID: 3
                    # NamedRef(a)
                ) ] 
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(y)
            )	 => [ 
                Tag(
                    mTagID: 4
                    # NamedRef(y)
                ) ] 
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(p)
            )	 => [ 
                Tag(
                    mTagID: 5
                    # NamedRef(p)
                ) ] 
            
            UnnamedRef(
                mMemRefType: USE
                mExprHandle: ExprHandle((malloc((((sizeof(int )) *(y))))))
                mLocal: 0
            )	 => [ 
                Tag(
                    mTagID: 6
                    # UnnamedRef()
                )    
                Tag(
                    mTagID: 7
                    # UnnamedRef()
                    # Deref(NamedRef(a))
                    # Deref(NamedRef(p))
                    # SubSetRef(UnnamedRef())
                ) ] 
            
            Deref(
                mMemRefType: DEF
                mMRE: 
                NamedRef(
                    mMemRefType: USE
                    mSymHandle: SymHandle(a)
                )
                mNumDeref: 1
            )	 => [ 
                Tag(
                    mTagID: 7
                    # UnnamedRef()
                    # Deref(NamedRef(a))
                    # Deref(NamedRef(p))
                    # SubSetRef(UnnamedRef())
                ) ] 
            
            Deref(
                mMemRefType: USE
                mMRE: 
                NamedRef(
                    mMemRefType: DEF
                    mSymHandle: SymHandle(p)
                )
                mNumDeref: 1
            )	 => [ 
                Tag(
                    mTagID: 7
                    # UnnamedRef()
                    # Deref(NamedRef(a))
                    # Deref(NamedRef(p))
                    # SubSetRef(UnnamedRef())
                ) ] 
            
            SubSetRef(
                mMemRefType: USE
                mMRE: 
                UnnamedRef(
                    mMemRefType: USE
                    mExprHandle: ExprHandle((malloc((((sizeof(int )) *(y))))))
                    mLocal: 0
                )
            )	 => [ 
                Tag(
                    mTagID: 7
                    # UnnamedRef()
                    # Deref(NamedRef(a))
                    # Deref(NamedRef(p))
                    # SubSetRef(UnnamedRef())
                ) ] 

    mTagToMREs: AliasTag	 => OA::OA_ptr<std::set<OA::OA_ptr<MemRefExpr> > > 
            
            Tag(
                mTagID: 1
                # NamedRef(malloc)
            )	 => [ 
                NamedRef(
                    mMemRefType: USE
                    mSymHandle: SymHandle(malloc)
                ) ] 
            
            Tag(
                mTagID: 2
                # NamedRef(g)
            )	 => [ 
                NamedRef(
                    mMemRefType: DEF
                    mSymHandle: SymHandle(g)
                ) ] 
            
            Tag(
                mTagID: 3
                # NamedRef(a)
            )	 => [ 
                NamedRef(
                    mMemRefType: USE
                    mSymHandle: SymHandle(a)
                ) ] 
            
            Tag(
                mTagID: 4
                # NamedRef(y)
            )	 => [ 
                NamedRef(
                    mMemRefType: DEF
                    mSymHandle: SymHandle(y)
                ) ] 
            
            Tag(
                mTagID: 5
                # NamedRef(p)
            )	 => [ 
                NamedRef(
                    mMemRefType: DEF
                    mSymHandle: SymHandle(p)
                ) ] 
            
            Tag(
                mTagID: 6
                # UnnamedRef()
            )	 => [ 
                UnnamedRef(
                    mMemRefType: USE
                    mExprHandle: ExprHandle((malloc((((sizeof(int )) *(y))))))
                    mLocal: 0
                ) ] 
            
            Tag(
                mTagID: 7
                # UnnamedRef()
                # Deref(NamedRef(a))
                # Deref(NamedRef(p))
                # SubSetRef(UnnamedRef())
            )	 => [ 
                UnnamedRef(
                    mMemRefType: USE
                    mExprHandle: ExprHandle((malloc((((sizeof(int )) *(y))))))
                    mLocal: 0
                )    
                Deref(
                    mMemRefType: DEF
                    mMRE: 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(a)
                    )
                    mNumDeref: 1
                )    
                Deref(
                    mMemRefType: USE
                    mMRE: 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(p)
                    )
                    mNumDeref: 1
                )    
                SubSetRef(
                    mMemRefType: USE
                    mMRE: 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle((malloc((((sizeof(int )) *(y))))))
                        mLocal: 0
                    )
                ) ] 

    mMemRefToTags: MemRefHandle	 => OA::OA_ptr<std::set<AliasTag> > 
            MemRefHandle(p)	 => [ 
                Tag(
                    mTagID: 5
                    # NamedRef(p)
                ) ] 
            MemRefHandle(a)	 => [ 
                Tag(
                    mTagID: 3
                    # NamedRef(a)
                ) ] 
            MemRefHandle(p)	 => [ 
                Tag(
                    mTagID: 5
                    # NamedRef(p)
                ) ] 
            MemRefHandle(a)	 => [ 
                Tag(
                    mTagID: 3
                    # NamedRef(a)
                ) ] 
            MemRefHandle(a)	 => [ 
                Tag(
                    mTagID: 3
                    # NamedRef(a)
                ) ] 
            MemRefHandle(p)	 => [ 
                Tag(
                    mTagID: 5
                    # NamedRef(p)
                ) ] 
            MemRefHandle(a)	 => [ 
                Tag(
                    mTagID: 3
                    # NamedRef(a)
                ) ] 

    mMREToMustFlag: OA::OA_ptr<MemRefExpr> 	 => bool
            
            NamedRef(
                mMemRefType: USE
                mSymHandle: SymHandle(malloc)
            )	 => 1
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(g)
            )	 => 1
            
            NamedRef(
                mMemRefType: USE
                mSymHandle: SymHandle(a)
            )	 => 1
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(y)
            )	 => 1
            
            NamedRef(
                mMemRefType: DEF
                mSymHandle: SymHandle(p)
            )	 => 1
            
            UnnamedRef(
                mMemRefType: USE
                mExprHandle: ExprHandle((malloc((((sizeof(int )) *(y))))))
                mLocal: 0
            )	 => 0
            
            Deref(
                mMemRefType: DEF
                mMRE: 
                NamedRef(
                    mMemRefType: USE
                    mSymHandle: SymHandle(a)
                )
                mNumDeref: 1
            )	 => 0
            
            Deref(
                mMemRefType: USE
                mMRE: 
                NamedRef(
                    mMemRefType: DEF
                    mSymHandle: SymHandle(p)
                )
                mNumDeref: 1
            )	 => 0
            
            SubSetRef(
                mMemRefType: USE
                mMRE: 
                UnnamedRef(
                    mMemRefType: USE
                    mExprHandle: ExprHandle((malloc((((sizeof(int )) *(y))))))
                    mLocal: 0
                )
            )	 => 0

    mMemRefToMustFlag: MemRefHandle	 => bool
            MemRefHandle(p)	 => 1
            MemRefHandle(a)	 => 1
            MemRefHandle(p)	 => 1
            MemRefHandle(a)	 => 1
            MemRefHandle(a)	 => 1
            MemRefHandle(p)	 => 1
            MemRefHandle(a)	 => 1

)
