
InterAliasMap(
    AliasMap(
        mProcHandle: ProcHandle(foo)
        mNumSets: 8
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(read)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    NamedLoc(
                        mSymHandle: SymHandle(bar)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(x)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(y)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(x)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                6	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(y)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                7	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            Deref(
                                mMemRefType: DEF
                                mMRE: 
                                NamedRef(
                                    mMemRefType: USE
                                    mSymHandle: SymHandle(x)
                                )
                                mNumDeref: 1
                            )
                            mNumDeref: 1
                        )
                    )    
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            Deref(
                                mMemRefType: USE
                                mMRE: 
                                NamedRef(
                                    mMemRefType: USE
                                    mSymHandle: SymHandle(y)
                                )
                                mNumDeref: 1
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 1
                3	 => 2
                4	 => 2
                5	 => 1
                6	 => 1
                7	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                3	 => [ MemRefHandle(x) ] 
                4	 => [ MemRefHandle(y) ] 
                5	 => [ MemRefHandle(*x) ] 
                6	 => [ MemRefHandle(*y) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(read)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo)
                    )    
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(bar)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(x)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(y)
                    ) ] 
                5	 => [ 
                    Deref(
                        mMemRefType: DEF
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(x)
                        )
                        mNumDeref: 1
                    ) ] 
                6	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(y)
                        )
                        mNumDeref: 1
                    ) ] 
                7	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        Deref(
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(x)
                            )
                            mNumDeref: 1
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(y)
                            )
                            mNumDeref: 1
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(bar)
        mNumSets: 8
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(read)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    NamedLoc(
                        mSymHandle: SymHandle(bar)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(xx)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(yy)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(xx)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                6	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(yy)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                7	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            Deref(
                                mMemRefType: USE
                                mMRE: 
                                NamedRef(
                                    mMemRefType: USE
                                    mSymHandle: SymHandle(xx)
                                )
                                mNumDeref: 1
                            )
                            mNumDeref: 1
                        )
                    )    
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            Deref(
                                mMemRefType: DEF
                                mMRE: 
                                NamedRef(
                                    mMemRefType: USE
                                    mSymHandle: SymHandle(yy)
                                )
                                mNumDeref: 1
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 1
                3	 => 2
                4	 => 2
                5	 => 1
                6	 => 1
                7	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                3	 => [ MemRefHandle(xx) ] 
                4	 => [ MemRefHandle(yy) ] 
                5	 => [ MemRefHandle(*xx) ] 
                6	 => [ MemRefHandle(*yy) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(read)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo)
                    )    
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(bar)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(xx)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(yy)
                    ) ] 
                5	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(xx)
                        )
                        mNumDeref: 1
                    ) ] 
                6	 => [ 
                    Deref(
                        mMemRefType: DEF
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(yy)
                        )
                        mNumDeref: 1
                    ) ] 
                7	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(xx)
                            )
                            mNumDeref: 1
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        Deref(
                            mMemRefType: DEF
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(yy)
                            )
                            mNumDeref: 1
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(main)
        mNumSets: 8
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(read)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(foo)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    NamedLoc(
                        mSymHandle: SymHandle(bar)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(input)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(a)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    NamedLoc(
                        mSymHandle: SymHandle(b)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(p)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(q)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                7	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(fp)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 1
                3	 => 2
                4	 => 1
                5	 => 2
                6	 => 2
                7	 => 2

        mIdToMemRefSetMap: int	 => MemRefSet
                1	 => [ MemRefHandle(read) ] 
                2	 => [ MemRefHandle(( *fp)) ] 
                3	 => [ MemRefHandle(input)    MemRefHandle(input) ] 
                5	 => [ MemRefHandle(p) ] 
                6	 => [ MemRefHandle(q) ] 
                7	 => [ MemRefHandle(fp)    MemRefHandle(fp)    MemRefHandle(fp) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(read)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(foo)
                    )    
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(bar)
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(fp)
                        )
                        mNumDeref: 1
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(input)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(a)
                    )    
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(b)
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(p)
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(q)
                        )
                        mNumDeref: 1
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(p)
                    ) ] 
                6	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(q)
                    ) ] 
                7	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(fp)
                    ) ] 

    )
)
