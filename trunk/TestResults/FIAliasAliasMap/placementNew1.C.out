
InterAliasMap(
    AliasMap(
        mProcHandle: ProcHandle(::std::exception::exception)
        mNumSets: 9
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new[])
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    UnnamedLoc(
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                7	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new)
                            )
                            mNumDeref: 1
                        )
                    )    
                    LocSubSet(
                        mLoc: 
                        UnnamedLoc(
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                        mFull: 0
                    ) ] 
                8	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new[])
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 1
                8	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new[])
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                    ) ] 
                6	 => [ 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                7	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new)
                        )
                        mNumDeref: 1
                    )    
                    SubSetRef(
                        mMemRefType: USE
                        mMRE: 
                        UnnamedRef(
                            mMemRefType: USE
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                    ) ] 
                8	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new[])
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(::std::bad_exception::bad_exception)
        mNumSets: 9
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new[])
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    UnnamedLoc(
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                7	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new)
                            )
                            mNumDeref: 1
                        )
                    )    
                    LocSubSet(
                        mLoc: 
                        UnnamedLoc(
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                        mFull: 0
                    ) ] 
                8	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new[])
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 1
                8	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new[])
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                    ) ] 
                6	 => [ 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                7	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new)
                        )
                        mNumDeref: 1
                    )    
                    SubSetRef(
                        mMemRefType: USE
                        mMRE: 
                        UnnamedRef(
                            mMemRefType: USE
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                    ) ] 
                8	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new[])
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(::std::bad_alloc::bad_alloc)
        mNumSets: 9
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new[])
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    UnnamedLoc(
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                7	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new)
                            )
                            mNumDeref: 1
                        )
                    )    
                    LocSubSet(
                        mLoc: 
                        UnnamedLoc(
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                        mFull: 0
                    ) ] 
                8	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new[])
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 1
                8	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new[])
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                    ) ] 
                6	 => [ 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                7	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new)
                        )
                        mNumDeref: 1
                    )    
                    SubSetRef(
                        mMemRefType: USE
                        mMRE: 
                        UnnamedRef(
                            mMemRefType: USE
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                    ) ] 
                8	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new[])
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(operator new)
        mNumSets: 10
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new[])
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(__p)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                7	 => [ 
                    UnnamedLoc(
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                8	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new)
                            )
                            mNumDeref: 1
                        )
                    )    
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(__p)
                            )
                            mNumDeref: 1
                        )
                    )    
                    LocSubSet(
                        mLoc: 
                        UnnamedLoc(
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                        mFull: 0
                    ) ] 
                9	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new[])
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 2
                8	 => 1
                9	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                6	 => [ MemRefHandle(__p) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new[])
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                    ) ] 
                6	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(__p)
                    ) ] 
                7	 => [ 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                8	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new)
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(__p)
                        )
                        mNumDeref: 1
                    )    
                    SubSetRef(
                        mMemRefType: USE
                        mMRE: 
                        UnnamedRef(
                            mMemRefType: USE
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                    ) ] 
                9	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new[])
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(operator new[])
        mNumSets: 11
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new[])
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle()
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                7	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(__p)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                8	 => [ 
                    UnnamedLoc(
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                9	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new)
                            )
                            mNumDeref: 1
                        )
                    )    
                    LocSubSet(
                        mLoc: 
                        UnnamedLoc(
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                        mFull: 0
                    ) ] 
                10	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new[])
                            )
                            mNumDeref: 1
                        )
                    )    
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: USE
                                mSymHandle: SymHandle(__p)
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 2
                8	 => 2
                9	 => 1
                10	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                7	 => [ MemRefHandle(__p) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new[])
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                    ) ] 
                6	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle()
                    ) ] 
                7	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(__p)
                    ) ] 
                8	 => [ 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                9	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new)
                        )
                        mNumDeref: 1
                    )    
                    SubSetRef(
                        mMemRefType: USE
                        mMRE: 
                        UnnamedRef(
                            mMemRefType: USE
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                    ) ] 
                10	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new[])
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(__p)
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(operator delete)
        mNumSets: 11
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new[])
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle()
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                7	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle()
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                8	 => [ 
                    UnnamedLoc(
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                9	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new)
                            )
                            mNumDeref: 1
                        )
                    )    
                    LocSubSet(
                        mLoc: 
                        UnnamedLoc(
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                        mFull: 0
                    ) ] 
                10	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new[])
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 2
                8	 => 2
                9	 => 1
                10	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new[])
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                    ) ] 
                6	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle()
                    ) ] 
                7	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle()
                    ) ] 
                8	 => [ 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                9	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new)
                        )
                        mNumDeref: 1
                    )    
                    SubSetRef(
                        mMemRefType: USE
                        mMRE: 
                        UnnamedRef(
                            mMemRefType: USE
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                    ) ] 
                10	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new[])
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(operator delete[])
        mNumSets: 11
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new[])
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle()
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                7	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle()
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                8	 => [ 
                    UnnamedLoc(
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                9	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new)
                            )
                            mNumDeref: 1
                        )
                    )    
                    LocSubSet(
                        mLoc: 
                        UnnamedLoc(
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                        mFull: 0
                    ) ] 
                10	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new[])
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 2
                8	 => 2
                9	 => 1
                10	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new[])
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                    ) ] 
                6	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle()
                    ) ] 
                7	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle()
                    ) ] 
                8	 => [ 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                9	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new)
                        )
                        mNumDeref: 1
                    )    
                    SubSetRef(
                        mMemRefType: USE
                        mMRE: 
                        UnnamedRef(
                            mMemRefType: USE
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                    ) ] 
                10	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new[])
                        )
                        mNumDeref: 1
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(main)
        mNumSets: 11
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(operator new[])
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                4	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                5	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                6	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(buf)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                7	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(p)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                8	 => [ 
                    UnnamedLoc(
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                9	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new)
                            )
                            mNumDeref: 1
                        )
                    )    
                    LocSubSet(
                        mLoc: 
                        UnnamedLoc(
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                        mFull: 0
                    ) ] 
                10	 => [ 
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(operator new[])
                            )
                            mNumDeref: 1
                        )
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2
                3	 => 2
                4	 => 2
                5	 => 2
                6	 => 2
                7	 => 2
                8	 => 2
                9	 => 1
                10	 => 1

        mIdToMemRefSetMap: int	 => MemRefSet
                1	 => [ MemRefHandle(::new /* Output placement arguments for new operator */((buf)) foo) ] 
                6	 => [ MemRefHandle(buf)    MemRefHandle(buf)    MemRefHandle(buf) ] 
                7	 => [ MemRefHandle(p)    MemRefHandle(p) ] 
                9	 => [ MemRefHandle(*p)    MemRefHandle(*buf) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(operator new[])
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::exception::exception__L3R)
                    ) ] 
                4	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_exception::bad_exception__L4R)
                    ) ] 
                5	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(this::::std::bad_alloc::bad_alloc__L5R)
                    ) ] 
                6	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(buf)
                    ) ] 
                7	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(p)
                    ) ] 
                8	 => [ 
                    UnnamedRef(
                        mMemRefType: USE
                        mExprHandle: ExprHandle(new char [1000])
                        mLocal: 0
                    ) ] 
                9	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new)
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(buf)
                        )
                        mNumDeref: 1
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: USE
                            mSymHandle: SymHandle(p)
                        )
                        mNumDeref: 1
                    )    
                    SubSetRef(
                        mMemRefType: USE
                        mMRE: 
                        UnnamedRef(
                            mMemRefType: USE
                            mExprHandle: ExprHandle(new char [1000])
                            mLocal: 0
                        )
                    ) ] 
                10	 => [ 
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(operator new[])
                        )
                        mNumDeref: 1
                    ) ] 

    )
)
