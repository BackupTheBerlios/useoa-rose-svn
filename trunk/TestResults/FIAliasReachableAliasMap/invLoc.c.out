
InterAliasMap(
    AliasMap(
        mProcHandle: ProcHandle(tail)
        mNumSets: 4
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(z)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(b)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    InvisibleLoc(
                        mMRE: 
                        Deref(
                            mMemRefType: USE
                            mMRE: 
                            NamedRef(
                                mMemRefType: DEF
                                mSymHandle: SymHandle(z)
                            )
                            mNumDeref: 1
                        )
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(tail)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 1
                3	 => 2

        mIdToMemRefSetMap: int	 => MemRefSet
                1	 => [ MemRefHandle(z)    MemRefHandle(z) ] 
                2	 => [ MemRefHandle(*z) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: DEF
                        mSymHandle: SymHandle(z)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(b)
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(z)
                        )
                        mNumDeref: 1
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(tail)
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(main)
        mNumSets: 3
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(c)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(tail)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 2
                2	 => 2

        mIdToMemRefSetMap: int	 => MemRefSet
                2	 => [ MemRefHandle(tail) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(c)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(tail)
                    ) ] 

    )
)
