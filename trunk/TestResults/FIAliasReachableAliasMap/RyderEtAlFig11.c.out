
InterAliasMap(
    AliasMap(
        mProcHandle: ProcHandle(R)
        mNumSets: 4
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(x)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    NamedLoc(
                        mSymHandle: SymHandle(y)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    NamedLoc(
                        mSymHandle: SymHandle(k)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(b)
                        mLocal: 1
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                3	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(R)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 1
                2	 => 2
                3	 => 2

        mIdToMemRefSetMap: int	 => MemRefSet
                1	 => [ MemRefHandle(*b)    MemRefHandle(*b)    MemRefHandle(( *b))    MemRefHandle(( *b)++) ] 
                2	 => [ MemRefHandle(b)    MemRefHandle(b)    MemRefHandle(b)    MemRefHandle(b) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(x)
                    )    
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(y)
                    )    
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(k)
                    )    
                    Deref(
                        mMemRefType: USE
                        mMRE: 
                        NamedRef(
                            mMemRefType: DEF
                            mSymHandle: SymHandle(b)
                        )
                        mNumDeref: 1
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(b)
                    ) ] 
                3	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(R)
                    ) ] 

    )
    AliasMap(
        mProcHandle: ProcHandle(main)
        mNumSets: 3
        mStartId: 0
        mIdToLocSetMap: int	 => OA::OA_ptr<LocSet> 
                0	 => [ 
                    UnknownLoc(
                    ) ] 
                1	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(x)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    NamedLoc(
                        mSymHandle: SymHandle(y)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    )    
                    NamedLoc(
                        mSymHandle: SymHandle(k)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 
                2	 => [ 
                    NamedLoc(
                        mSymHandle: SymHandle(R)
                        mLocal: 0
                        mFullOverlap: [  ] 
                        mPartOverlap: [  ] 
                    ) ] 

        mIdToSetStatusMap: int	 => AliasResultType
                0	 => 1
                1	 => 1
                2	 => 2

        mIdToMemRefSetMap: int	 => MemRefSet
                2	 => [ MemRefHandle(R)    MemRefHandle(R) ] 

        mIdToMRESetMap: int	 => MemRefExprSet
                1	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(x)
                    )    
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(y)
                    )    
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(k)
                    ) ] 
                2	 => [ 
                    NamedRef(
                        mMemRefType: USE
                        mSymHandle: SymHandle(R)
                    ) ] 

    )
)
