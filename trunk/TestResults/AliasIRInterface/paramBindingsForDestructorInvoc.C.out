
PROCEDURE = { < ProcHandle("::Foo::Foo"), SymHandle("method:::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_") > }
    FORMALS = {
        [
            < 0, SymHandle("this::::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_") >
        ] }
    MEMREFEXPRS = { StmtHandle("") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("public: inline Foo(){}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{}") =>
        [
        ] }
    LOCATION = { < SymHandle("this::::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"), local > }
    LOCATION = { < SymHandle("method:::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"), not local > }

PROCEDURE = { < ProcHandle("::Foo::~Foo"), SymHandle("method:::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_") > }
    FORMALS = {
        [
            < 0, SymHandle("this::::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_") >
        ] }
    MEMREFEXPRS = { StmtHandle("") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("public: inline ~Foo(){}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{}") =>
        [
        ] }
    LOCATION = { < SymHandle("this::::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"), local > }
    LOCATION = { < SymHandle("method:::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"), not local > }

PROCEDURE = { < ProcHandle("main"), SymHandle("main") > }
    MEMREFEXPRS = { StmtHandle("class Foo {public: inline Foo(){}inline ~Foo(){}};") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int main(){class ::Foo *f = ::new ::Foo ;delete f;return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{class ::Foo *f = ::new ::Foo ;delete f;return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("class ::Foo *f = ::new ::Foo ;") =>
        [
            MemRefHandle("::Foo") => 
                NamedRef( USE, SymHandle("method:::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"))
            MemRefHandle("f") => 
                NamedRef( DEF, SymHandle("f"))
            MemRefHandle("implicit actual this:") => 
                AddressOf( USE, SubSetRef( USE, UnnamedRef( USE, ExprHandle("::new ::Foo"))))
            MemRefHandle("::new ::Foo") => 
                AddressOf( USE, SubSetRef( USE, UnnamedRef( USE, ExprHandle("::new ::Foo"))))
        ] }
    PTRASSIGNPAIRS = { StmtHandle("class ::Foo *f = ::new ::Foo ;") =>
        [
            < NamedRef( DEF, SymHandle("f"))
            , AddressOf( USE, SubSetRef( USE, UnnamedRef( USE, ExprHandle("::new ::Foo")))) >
        ] }
    CALLSITES = { StmtHandle("class ::Foo *f = ::new ::Foo ;") =>
        [
            CallHandle("::new ::Foo") => 
                NamedRef( USE, SymHandle("method:::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"))
        ] }
    PARAMBINDPTRASSIGNPAIRS = { CallHandle("::new ::Foo") =>
        [
            < 0, AddressOf( USE, SubSetRef( USE, UnnamedRef( USE, ExprHandle("::new ::Foo")))) >
        ] }
    MEMREFEXPRS = { StmtHandle("delete f;") =>
        [
            MemRefHandle("f") => 
                NamedRef( USE, SymHandle("f"))
            MemRefHandle("delete f") => 
                NamedRef( USE, SymHandle("method:::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"))
        ] }
    CALLSITES = { StmtHandle("delete f;") =>
        [
            CallHandle("delete f") => 
                NamedRef( USE, SymHandle("method:::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"))
        ] }
    PARAMBINDPTRASSIGNPAIRS = { CallHandle("delete f") =>
        [
            < 0, NamedRef( USE, SymHandle("f")) >
        ] }
    MEMREFEXPRS = { StmtHandle("return 0;") =>
        [
        ] }
    LOCATION = { < SymHandle("f"), local > }
    LOCATION = { < SymHandle("main"), not local > }
    LOCATION = { < SymHandle("method:::Foo::Foo__Foo__scope__Foo____MFb_Foo__Fb_v_Gb__Fe_"), not local > }
    LOCATION = { < SymHandle("method:::Foo::~Foo__Foo__scope____dtFoo____MFb_Foo__Fb_v_Gb__Fe_"), not local > }
