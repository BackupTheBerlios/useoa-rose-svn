"TestCases/AliasTests/assignOps.c", line 14: warning: variable "b" is used
          before its value is set
      return a = b -= a;
                 ^


PROCEDURE = { < ProcHandle("main"), SymHandle("main") > }
    MEMREFEXPRS = { StmtHandle("int main(){int a;int b;a = 20;a++;a += 45;return a =(b -= a);}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{int a;int b;a = 20;a++;a += 45;return a =(b -= a);}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int a;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int b;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("a = 20;") =>
        [
            MemRefHandle("a") => 
                NamedRef( DEF, SymHandle("a"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("a++;") =>
        [
            MemRefHandle("a") => 
                NamedRef( DEF, SymHandle("a"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("a += 45;") =>
        [
            MemRefHandle("a") => 
                NamedRef( DEF, SymHandle("a"), F, full)
        ] }
    MEMREFEXPRS = { StmtHandle("return a =(b -= a);") =>
        [
            MemRefHandle("a") => 
                NamedRef( DEF, SymHandle("a"), F, full)
            MemRefHandle("b") => 
                NamedRef( DEF, SymHandle("b"), F, full)
            MemRefHandle("a") => 
                NamedRef( USE, SymHandle("a"), F, full)
        ] }
    LOCATION = { < SymHandle("a"), local > }
    LOCATION = { < SymHandle("b"), local > }
    LOCATION = { < SymHandle("main"), not local > }
