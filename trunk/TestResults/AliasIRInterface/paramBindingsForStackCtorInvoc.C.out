
PROCEDURE = { < ProcHandle("::Foo::Foo"), SymHandle("method:::Foo::Foo__L0R") > }
    FORMALS = {
        [
            < 0, SymHandle("this::::Foo::Foo__L0R") >
            < 1, SymHandle("x") >
        ] }
    MEMREFEXPRS = { StmtHandle("") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("public: inline Foo::Foo(int x){}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{}") =>
        [
        ] }
    LOCATION = { < SymHandle("this::::Foo::Foo__L0R"), local > }
    LOCATION = { < SymHandle("x"), local > }
    LOCATION = { < SymHandle("method:::Foo::Foo__L0R"), not local > }

PROCEDURE = { < ProcHandle("main"), SymHandle("main") > }
    MEMREFEXPRS = { StmtHandle("class ::Foo {public: inline Foo::Foo(int x){}};") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int main(){int y;class ::Foo f(y);return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("{int y;class ::Foo f(y);return 0;}") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("int y;") =>
        [
        ] }
    MEMREFEXPRS = { StmtHandle("class Foo f(y);") =>
        [
            MemRefHandle("::Foo(y)") => 
                NamedRef( USE, SymHandle("method:::Foo::Foo__L0R"))
            MemRefHandle("implicit actual this:y") => 
                AddressOf( USE, NamedRef( USE, SymHandle("f")))
            MemRefHandle("y") => 
                NamedRef( USE, SymHandle("y"))
        ] }
    CALLSITES = { StmtHandle("class Foo f(y);") =>
        [
            CallHandle("f") => 
                NamedRef( USE, SymHandle("method:::Foo::Foo__L0R"))
        ] }
    PARAMBINDPTRASSIGNPAIRS = { CallHandle("f") =>
        [
            < 0, AddressOf( USE, NamedRef( USE, SymHandle("f"))) >
        ] }
    MEMREFEXPRS = { StmtHandle("return 0;") =>
        [
        ] }
    LOCATION = { < SymHandle("main"), not local > }
    LOCATION = { < SymHandle("y"), local > }
    LOCATION = { < SymHandle("f"), local > }
    LOCATION = { < SymHandle("method:::Foo::Foo__L0R"), not local > }
