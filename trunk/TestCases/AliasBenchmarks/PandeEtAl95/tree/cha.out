"/fusion/scratch2/bwhite/alias-analysis-project/UseOA-memRefExprRefactor/TestCases/AliasBenchmarks/PandeEtAl95/tree/singleFile.C", line 160: warning: 
          variable "num" was set but never used
    float num, den;
          ^

"/fusion/scratch2/bwhite/alias-analysis-project/UseOA-memRefExprRefactor/TestCases/AliasBenchmarks/PandeEtAl95/tree/singleFile.C", line 160: warning: 
          variable "den" was set but never used
    float num, den;
               ^

"/fusion/scratch2/bwhite/alias-analysis-project/UseOA-memRefExprRefactor/TestCases/AliasBenchmarks/PandeEtAl95/tree/singleFile.C", line 184: warning: 
          missing return statement at end of non-void function
          "UnaryNode::nodeValue"
  }
  ^

Generating copy constructor for Node
func_name = Node
inserting Node = 0x42d97188
func_name = operator=
inserting operator= = 0x42d972e8
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Visiting memberFunctionDecl: protected: inline Node(){(this) -> use = 1;}
Visiting memberFunctionDecl: protected: virtual inline float nodeValue(){return(0.0);}
Visiting memberFunctionDecl: public: virtual inline ~Node(){}
Visiting memberFunctionDecl: public: Node(class Node &rhs) : use(rhs.use){}
Visiting memberFunctionDecl: public: Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}
Generating constructor for Tree
func_name = Tree
inserting Tree = 0x42d97448
Visiting memberFunctionDecl: public: Tree(){}
Generating constructor for RealNode
func_name = RealNode
inserting RealNode = 0x42d975a8
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating constructor call for Node within method: public: RealNode(){}
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating copy constructor for RealNode
func_name = RealNode
inserting RealNode = 0x42d97708
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating copy constructor call for Node
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
func_name = operator=
inserting operator= = 0x42d97868
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Visiting memberFunctionDecl: private: virtual inline ~RealNode(){delete((this) -> symbol);(this) -> Node::~Node();}
invoked base class: Node
Visiting memberFunctionDecl: public: RealNode() : Node(){}
invoked base class: Node
Visiting memberFunctionDecl: public: RealNode(class RealNode &rhs) : n(rhs.n), symbol(rhs.symbol), Node(rhs){}
invoked base class: Node
Visiting memberFunctionDecl: public: RealNode &operator=(class RealNode &rhs){(*((class Node *)(this)))=((class Node &)rhs);if((this) == &rhs) {return *(this);}else {}(this) -> n = rhs.n;(this) -> symbol = rhs.symbol;return *(this);}
Generating constructor for UnaryNode
func_name = UnaryNode
inserting UnaryNode = 0x42d979c8
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating constructor call for Node within method: public: UnaryNode(){}
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating copy constructor for UnaryNode
func_name = UnaryNode
inserting UnaryNode = 0x42d97b28
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating copy constructor call for Node
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
func_name = operator=
inserting operator= = 0x42d97c88
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Visiting memberFunctionDecl: private: virtual inline ~UnaryNode(){delete((this) -> op);delete((this) -> opnd);(this) -> Node::~Node();}
invoked base class: Node
Visiting memberFunctionDecl: public: UnaryNode() : Node(){}
invoked base class: Node
Visiting memberFunctionDecl: public: UnaryNode(class UnaryNode &rhs) : op(rhs.op), opnd(rhs.opnd), Node(rhs){}
invoked base class: Node
Visiting memberFunctionDecl: public: UnaryNode &operator=(class UnaryNode &rhs){(*((class Node *)(this)))=((class Node &)rhs);if((this) == &rhs) {return *(this);}else {}(this) -> op = rhs.op;(this) -> opnd = rhs.opnd;return *(this);}
Generating constructor for BinaryNode
func_name = BinaryNode
inserting BinaryNode = 0x42d97de8
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating constructor call for Node within method: public: BinaryNode(){}
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating copy constructor for BinaryNode
func_name = BinaryNode
inserting BinaryNode = 0x42d97f48
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating copy constructor call for Node
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
func_name = operator=
inserting operator= = 0x42d980a8
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Visiting memberFunctionDecl: private: virtual inline ~BinaryNode(){delete((this) -> op);delete((this) -> left);delete((this) -> right);(this) -> Node::~Node();}
invoked base class: Node
Visiting memberFunctionDecl: public: BinaryNode() : Node(){}
invoked base class: Node
Visiting memberFunctionDecl: public: BinaryNode(class BinaryNode &rhs) : op(rhs.op), left(rhs.left), right(rhs.right), Node(rhs){}
invoked base class: Node
Visiting memberFunctionDecl: public: BinaryNode &operator=(class BinaryNode &rhs){(*((class Node *)(this)))=((class Node &)rhs);if((this) == &rhs) {return *(this);}else {}(this) -> op = rhs.op;(this) -> left = rhs.left;(this) -> right = rhs.right;return *(this);}
Visiting memberFunctionDecl: Tree::Tree(float n){(this) -> nodePtr =((new RealNode(n)));}
Visiting memberFunctionDecl: Tree::Tree(char *ch){(this) -> nodePtr =((new RealNode((0.0),ch)));}
Visiting memberFunctionDecl: Tree::Tree(char *op,class Tree t){(this) -> nodePtr =((new UnaryNode(op,(t))));}
Visiting memberFunctionDecl: Tree::Tree(class Tree left,char *op,class Tree right){(this) -> nodePtr =((new BinaryNode(op,(left),(right))));}
Visiting memberFunctionDecl: Tree::~Tree(){if(--( *((this) -> nodePtr)).use == 0) {delete((this) -> nodePtr);}else {}}
Visiting memberFunctionDecl: void Tree::operator=(const class Tree &t){++( *(t.nodePtr)).use;if(--( *((this) -> nodePtr)).use == 0) {delete((this) -> nodePtr);}else {}(this) -> nodePtr =(t.nodePtr);}
Visiting memberFunctionDecl: Tree::Tree(const class Tree &t){(this) -> nodePtr =(t.nodePtr);++( *((this) -> nodePtr)).use;}
Visiting memberFunctionDecl: float Tree::value(){return( *((this) -> nodePtr)).nodeValue();}
Visiting memberFunctionDecl: float Tree::operator()(float x,float y,float z){((values0 = x) , values1 = y) , values2 = z;return(this) -> value();}
Visiting memberFunctionDecl: BinaryNode::BinaryNode(char *a,class Tree b,class Tree c){(this) -> left =(new Tree(b));(this) -> right =(new Tree(c));strlen(a) ,(this) -> op =(new char );strcpy(((this) -> op),a);}
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating constructor call for Node within method: BinaryNode::BinaryNode(char *a,class Tree b,class Tree c){(this) -> left =(new Tree(b));(this) -> right =(new Tree(c));strlen(a) ,(this) -> op =(new char );strcpy(((this) -> op),a);}
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Visiting memberFunctionDecl: float BinaryNode::nodeValue(){float num;float den;if((( *((this) -> op))) ==('+')) {return( *((this) -> left)).value() +( *((this) -> right)).value();}else {num =( *((this) -> left)).value();den =( *((this) -> right)).value();return(9999999.0);}}
Visiting memberFunctionDecl: UnaryNode::UnaryNode(char *a,class Tree b){(this) -> opnd =(new Tree(b));strlen(a) ,(this) -> op =(new char );strcpy(((this) -> op),a);}
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating constructor call for Node within method: UnaryNode::UnaryNode(char *a,class Tree b){(this) -> opnd =(new Tree(b));strlen(a) ,(this) -> op =(new char );strcpy(((this) -> op),a);}
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Visiting memberFunctionDecl: float UnaryNode::nodeValue(){if((( *((this) -> op))) ==('-')) {return -(( *((this) -> opnd)).value());}else {if((( *((this) -> op))) ==('+')) {return( *((this) -> opnd)).value();}else {}}}
Visiting memberFunctionDecl: RealNode::RealNode(float k,char *ch){(this) -> n = k;if(ch) {strlen(ch) ,(this) -> symbol =(new char );strcpy(((this) -> symbol),ch);}else {}}
uninvoked base class: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Generating constructor call for Node within method: RealNode::RealNode(float k,char *ch){(this) -> n = k;if(ch) {strlen(ch) ,(this) -> symbol =(new char );strcpy(((this) -> symbol),ch);}else {}}
parent class def: class Node {private: friend class Tree ;int use;protected: inline Node(){(this) -> use = 1;}virtual inline float nodeValue(){return(0.0);}public: virtual inline ~Node(){}Node(class Node &rhs) : use(rhs.use){}Node &operator=(class Node &rhs){if((this) == &rhs) {return *(this);}else {}(this) -> use = rhs.use;return *(this);}}
Visiting memberFunctionDecl: float RealNode::nodeValue(){if(((this) -> symbol) ==((0))) {return(this) -> n;}else {if((( *((this) -> symbol))) ==('x')) {return values0;}else {if((( *((this) -> symbol))) ==('y')) {return values1;}else {return values2;}}}}
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
in varDecl loop0x42d1e008
in varDecl loop0x42d1e0fc
in varDecl loop0x42d1e1f0
in varDecl loop0x42d1e2e4
in varDecl loop0x42d1e3d8
in varDecl loop0x42d1e4cc
in varDecl loop0x42d1e5c0
in varDecl loop0x42d1e6b4
in varDecl loop0x42d1e7a8
in varDecl loop0x42d1e89c
in varDecl loop0x42d1e990
in varDecl loop0x42d1ea84
in varDecl loop0x42d1eb78
in varDecl loop0x42d1ec6c
in varDecl loop0x42d1ed60
in varDecl loop0x42d1ee54
in varDecl loop0x42d1ef48
in varDecl loop0x42d1f03c
in varDecl loop0x42d1f130
in varDecl loop0x42d1f224
in varDecl loop0x42d1f318
in varDecl loop0x42d1f40c
in varDecl loop0x42d1f500
in varDecl loop0x42d1f5f4
in varDecl loop0x42d1f6e8
in varDecl loop0x42d1f7dc
in varDecl loop0x42d1f8d0
in varDecl loop0x42d1f9c4
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
virtual function defn: protected: virtual inline float nodeValue(){return(0.0);}
virtual function defn: public: virtual inline ~Node(){}
virtual function defn: private: virtual inline ~RealNode(){delete((this) -> symbol);(this) -> Node::~Node();}
virtual function defn: private: virtual inline ~UnaryNode(){delete((this) -> op);delete((this) -> opnd);(this) -> Node::~Node();}
virtual function defn: private: virtual inline ~BinaryNode(){delete((this) -> op);delete((this) -> left);delete((this) -> right);(this) -> Node::~Node();}
virtual function defn: float BinaryNode::nodeValue(){float num;float den;if((( *((this) -> op))) ==('+')) {return( *((this) -> left)).value() +( *((this) -> right)).value();}else {num =( *((this) -> left)).value();den =( *((this) -> right)).value();return(9999999.0);}}
virtual function defn: float UnaryNode::nodeValue(){if((( *((this) -> op))) ==('-')) {return -(( *((this) -> opnd)).value());}else {if((( *((this) -> op))) ==('+')) {return( *((this) -> opnd)).value();}else {}}}
virtual function defn: float RealNode::nodeValue(){if(((this) -> symbol) ==((0))) {return(this) -> n;}else {if((( *((this) -> symbol))) ==('x')) {return values0;}else {if((( *((this) -> symbol))) ==('y')) {return values1;}else {return values2;}}}}
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeInt 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgTypeFloat 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
Found an case where SgBinaryOp::p_expression_type != NULL on SgAssignOp expression_type_name = SgPointerType 
CHA examining: main___Fb_i_Gb__Fe_
method?: t4((12.0),(0),(0))
method: t4((12.0),(0),(0))
dot: t4((12.0),(0),(0))
method?: t5.value()
method: t5.value()
dot: t5.value()
method?: t6((12.12),(0),(0))
method: t6((12.12),(0),(0))
dot: t6((12.12),(0),(0))
method?: t7.value()
method: t7.value()
dot: t7.value()
CHA examining: Tree__scope__operator__cl____MFb_Tree__Fb_f_Gb_f__sep__f__sep__f_Fe_
method?: (this) -> value()
method: (this) -> value()
methodPtr: (this) -> value()
CHA examining: Tree__scope__value____MFb_Tree__Fb_f_Gb__Fe_
method?: ( *((this) -> nodePtr)).nodeValue()
method: ( *((this) -> nodePtr)).nodeValue()
methodPtr: ( *((this) -> nodePtr)).nodeValue()
tracking: protected: virtual inline float nodeValue(){return(0.0);}
checking overrides
checking overrides
overrides
CHA resolution for call site: ( *((this) -> nodePtr)).nodeValue() protected: virtual inline float nodeValue(){return(0.0);}
checking overrides
checking overrides
checking overrides
Looking up subclasses of 0x829eed8 Node
subclass of Node got: RealNode
checking overrides
checking overrides
checking overrides
overries
CHA resolution for call site: ( *((this) -> nodePtr)).nodeValue() float RealNode::nodeValue(){if(((this) -> symbol) ==((0))) {return(this) -> n;}else {if((( *((this) -> symbol))) ==('x')) {return values0;}else {if((( *((this) -> symbol))) ==('y')) {return values1;}else {return values2;}}}}
checking overrides
checking overrides
checking overrides
subclass of Node got: UnaryNode
checking overrides
checking overrides
checking overrides
overries
CHA resolution for call site: ( *((this) -> nodePtr)).nodeValue() float UnaryNode::nodeValue(){if((( *((this) -> op))) ==('-')) {return -(( *((this) -> opnd)).value());}else {if((( *((this) -> op))) ==('+')) {return( *((this) -> opnd)).value();}else {}}}
checking overrides
checking overrides
checking overrides
subclass of Node got: BinaryNode
checking overrides
checking overrides
checking overrides
overries
CHA resolution for call site: ( *((this) -> nodePtr)).nodeValue() float BinaryNode::nodeValue(){float num;float den;if((( *((this) -> op))) ==('+')) {return( *((this) -> left)).value() +( *((this) -> right)).value();}else {num =( *((this) -> left)).value();den =( *((this) -> right)).value();return(9999999.0);}}
checking overrides
checking overrides
checking overrides
CHA examining: Node__scope__nodeValue____MFb_Node__Fb_f_Gb__Fe_
CHA examining: RealNode__scope__nodeValue____MFb_RealNode__Fb_f_Gb__Fe_
CHA examining: UnaryNode__scope__nodeValue____MFb_UnaryNode__Fb_f_Gb__Fe_
method?: (( *((this) -> opnd)).value())
method: (( *((this) -> opnd)).value())
methodPtr: (( *((this) -> opnd)).value())
method?: ( *((this) -> opnd)).value()
method: ( *((this) -> opnd)).value()
methodPtr: ( *((this) -> opnd)).value()
CHA examining: BinaryNode__scope__nodeValue____MFb_BinaryNode__Fb_f_Gb__Fe_
method?: ( *((this) -> left)).value()
method: ( *((this) -> left)).value()
methodPtr: ( *((this) -> left)).value()
method?: ( *((this) -> right)).value()
method: ( *((this) -> right)).value()
methodPtr: ( *((this) -> right)).value()
method?: ( *((this) -> left)).value()
method: ( *((this) -> left)).value()
methodPtr: ( *((this) -> left)).value()
method?: ( *((this) -> right)).value()
method: ( *((this) -> right)).value()
methodPtr: ( *((this) -> right)).value()
Alias analysis examining: main___Fb_i_Gb__Fe_
method?: t4((12.0),(0),(0))
method: t4((12.0),(0),(0))
dot: t4((12.0),(0),(0))
method?: t5.value()
method: t5.value()
dot: t5.value()
method?: t6((12.12),(0),(0))
method: t6((12.12),(0),(0))
dot: t6((12.12),(0),(0))
method?: t7.value()
method: t7.value()
dot: t7.value()
Alias analysis examining: Tree__scope__operator__cl____MFb_Tree__Fb_f_Gb_f__sep__f__sep__f_Fe_
method?: (this) -> value()
method: (this) -> value()
methodPtr: (this) -> value()
Alias analysis examining: Tree__scope__value____MFb_Tree__Fb_f_Gb__Fe_
method?: ( *((this) -> nodePtr)).nodeValue()
method: ( *((this) -> nodePtr)).nodeValue()
methodPtr: ( *((this) -> nodePtr)).nodeValue()
tracking: protected: virtual inline float nodeValue(){return(0.0);}
Alias analysis resolution for call site ( *((this) -> nodePtr)).nodeValue() 
NamedLoc(
    mSymHandle: SymHandle(method:BinaryNode::nodeValue__BinaryNode__scope__nodeValue____MFb_BinaryNode__Fb_f_Gb__Fe_)
    mLocal: 0
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
Alias analysis resolution for call site ( *((this) -> nodePtr)).nodeValue() 
NamedLoc(
    mSymHandle: SymHandle(method:UnaryNode::nodeValue__UnaryNode__scope__nodeValue____MFb_UnaryNode__Fb_f_Gb__Fe_)
    mLocal: 0
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
Alias analysis resolution for call site ( *((this) -> nodePtr)).nodeValue() 
NamedLoc(
    mSymHandle: SymHandle(method:RealNode::nodeValue__RealNode__scope__nodeValue____MFb_RealNode__Fb_f_Gb__Fe_)
    mLocal: 0
    mFullOverlap: [  ] 
    mPartOverlap: [  ] 
)
Alias analysis examining: BinaryNode__scope__nodeValue____MFb_BinaryNode__Fb_f_Gb__Fe_
method?: ( *((this) -> left)).value()
method: ( *((this) -> left)).value()
methodPtr: ( *((this) -> left)).value()
method?: ( *((this) -> right)).value()
method: ( *((this) -> right)).value()
methodPtr: ( *((this) -> right)).value()
method?: ( *((this) -> left)).value()
method: ( *((this) -> left)).value()
methodPtr: ( *((this) -> left)).value()
method?: ( *((this) -> right)).value()
method: ( *((this) -> right)).value()
methodPtr: ( *((this) -> right)).value()
Alias analysis examining: UnaryNode__scope__nodeValue____MFb_UnaryNode__Fb_f_Gb__Fe_
method?: (( *((this) -> opnd)).value())
method: (( *((this) -> opnd)).value())
methodPtr: (( *((this) -> opnd)).value())
method?: ( *((this) -> opnd)).value()
method: ( *((this) -> opnd)).value()
methodPtr: ( *((this) -> opnd)).value()
Alias analysis examining: RealNode__scope__nodeValue____MFb_RealNode__Fb_f_Gb__Fe_
Inside of ~CallGraphCreate() 
